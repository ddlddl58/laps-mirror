#!@CSH@   

# This script transfers LAPS_DATA_ROOT analysis output for the present run time
# to a remote directory on another machine, using 'tarlapstime.sh' Purging
# is also done in the remote directory. SSH is used to access the remote 
# machine.

# LAPS DATA ROOT is first argument

# REMOTE machine name is second argument

# REMOTE DATA_ROOT is third argument

# REMOTE purge time (hours) is fourth argument

# YYDDDHHMM is fifth argument

# YYYYMMDD_HHMM is sixth argument

# FILES is seventh argument 
#       [optional - 1=2D, 2=3D, 3=3D+LGA, default value is 2 if not supplied]

# METHOD is eighth argument (if FILES is supplied)
#       [optional - exchange_zip, rsync, etc., default value is rsync if not supplied]

# MSSPATH is ninth argument (if METHOD is supplied)

umask 002

setenv LAPS_DATA_ROOT $1                      
setenv DOMAIN $2             
setenv REMOTE_DATA_ROOT $3
#setenv MSSPATH $2
setenv REMOTE_PURGE_TIME $4

#setenv DEST $5

#setenv LAPSINSTALLROOT @prefix@

if ($LAPS_DATA_ROOT == "")then       
    echo "LAPS_DATA_ROOT not set"
    exit
endif
if (! -d $LAPS_DATA_ROOT) then
    echo "Could not find LAPS_DATA_ROOT $LAPS_DATA_ROOT"
    exit
endif

setenv YYDDDHHMM $5
setenv YYYYMMDD_HHMM $6
setenv MONTH `echo $YYYYMMDD_HHMM  | cut -c5-6`

#setenv YYDDDHHMM `@PERL@ @prefix@/etc/sched_sys.pl -d 0.50 -D $LAPS_DATA_ROOT`
#setenv MONTH     `@PERL@ @prefix@/etc/sched_sys.pl -d 0.50 -f mm -D $LAPS_DATA_ROOT`
#setenv YYYYMMDD_HHMM `@PERL@ @prefix@/etc/sched_sys.pl -d 0.50 -f yyyymmdd_hhmm -D $LAPS_DATA_ROOT`

echo "laps time $YYDDDHHMM"

echo "a13time $YYYYMMDD_HHMM"

echo "month = $MONTH"

setenv YYYY `echo $YYYYMMDD_HHMM  | cut -c1-4`

setenv DATE `echo $YYYYMMDD_HHMM  | cut -c7-8`

setenv MM   `echo $YYYYMMDD_HHMM  | cut -c12-13`

setenv FILES $7
if ($FILES == "") then
    setenv FILES 2
endif

setenv METHOD $8
if ($METHOD == "") then
    setenv METHOD rsync
endif

setenv MSSPATH $9

cd $LAPS_DATA_ROOT

date -u

echo " "
echo "Running this command:"

if ($MM == "00") then
    echo @prefix@/etc/tarlapstime.sh $LAPS_DATA_ROOT $YYDDDHHMM $YYYY $MONTH$DATE $FILES $METHOD static $DOMAIN $REMOTE_DATA_ROOT
         @prefix@/etc/tarlapstime.sh $LAPS_DATA_ROOT $YYDDDHHMM $YYYY $MONTH$DATE $FILES $METHOD static $DOMAIN $REMOTE_DATA_ROOT
else
    echo @prefix@/etc/tarlapstime.sh $LAPS_DATA_ROOT $YYDDDHHMM $YYYY $MONTH$DATE $FILES $METHOD nostatic $DOMAIN $REMOTE_DATA_ROOT
         @prefix@/etc/tarlapstime.sh $LAPS_DATA_ROOT $YYDDDHHMM $YYYY $MONTH$DATE $FILES $METHOD nostatic $DOMAIN $REMOTE_DATA_ROOT
endif

date -u

if ($REMOTE_PURGE_TIME != nopurge) then
    echo "Running this command:"

    echo ssh $DOMAIN /usr/nfs/lapb/builds/laps/etc/purger.pl -t $REMOTE_PURGE_TIME $REMOTE_DATA_ROOT/lapsprd
         ssh $DOMAIN /usr/nfs/lapb/builds/laps/etc/purger.pl -t $REMOTE_PURGE_TIME $REMOTE_DATA_ROOT/lapsprd 

    date -u

else
    echo "Skipping purge: REMOTE_PURGE_TIME = $REMOTE_PURGE_TIME"

endif

if ($MSSPATH != "") then

    module load hpss

    cd $LAPS_DATA_ROOT/log

    echo  "MSSFULLPATH = $MSSPATH/$YYYY/$MONTH/$DATE/laps"
    setenv MSSFULLPATH   $MSSPATH/$YYYY/$MONTH/$DATE/laps

    hsi "mkdir -p $MSSFULLPATH"

    hsi "cd $MSSFULLPATH; cput lapstar_www.txt.$YYDDDHHMM.*"
    hsi "cd $MSSFULLPATH; cput lapstar2.txt.$YYDDDHHMM.*"
 
    date -u

endif

echo " "
echo "Successful completion of xferlaps.csh..."


