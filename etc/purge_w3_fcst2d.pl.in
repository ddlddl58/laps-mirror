#!@PERL@
#
#  purge_w3_fcst2d.pl
#
#  Script to purge a domain's fcst2d archive directory on the
#  LAPS web page.

require "@prefix@/etc/laps_tools.pm";

require 5;
use strict;

# Allow some options

use Getopt::Std;
use vars qw($opt_d $opt_h $opt_t $opt_f);
getopts('d:ht:f');

if ($opt_h){
  print "Usage:  purge_w3_fcst2d.pl [options] domain model\n";
  print "Options:\n\n";
  print "         -d directory\n";
  print "            Specify and utilize a LAPS_DATA_ROOT that contains\n";
  print "            the subdirectories with your web data.  The default\n";
  print "            location is /w3/lapb/domains (external to LAPS_DATA_ROOT)\n";
  print "            If specified, then a dummy argument can be used for 'domain'\n";
  print "            If -d is a full modelroot path, then set 'domain' to the string 'modelroot'\n";
  print "\n";
  print "         -h \n";
  print "            Displays this help message.\n";
  print "\n";
  print "         -t hours\n";
  print "            Any directory older than this many hours will\n";
  print "            be purged.  Default value is 48.\n";
  print "\n";
  print "         -f \n";
  print "            Purge model run directories having the format YYYYMMDDHH\n";
  exit;
}
 
  
# Require 2 arguments: domain and model names

my $nargs = @ARGV;
if ($nargs != 2) {
  print "Need 2 arguments:  domain model\n";
  print "Usage:  purge_w3_fcst2d.pl [options] domain model.\n";
  print "Type purge_w3_fcst2d.pl -h for options.\n";
  die;
}

my ($domain, $model) = @ARGV;
  
#  Process options

my ($purgedir, $maxage);

if($domain ne "modelroot"){
  if ($opt_d) {
    $purgedir = "$opt_d/lapsprd/www/fcst2d/$model/archive";
  }else{
    $purgedir = "/w3/lapb/domains/$domain/fcst2d/$model/archive";
  }

  if (! -d "$purgedir") {
    die "$purgedir not found!\n";
  }

}else{
  $purgedir = "$opt_d";

}

if ($opt_t) {
  $maxage = $opt_t * 3600;
}else{
  $maxage = 48 * 3600;
}

print "Purging $purgedir\n";
my $timenow = time;     
my $timeold = $timenow - $maxage;

# Build a string from timeold to use to compare to the 
# subdirectories in archive.

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst)=gmtime($timeold);
$year = $year + 1900;
my $year2 = $year - 2000;
$year2 = "0".$year2 while(length($year2)<2);
$yday++;
$yday="0".$yday while (length($yday)<3);
$hour = "0".$hour while(length($hour)<2);
$min = "00";  # Truncate to this hour

my $thresh;

if (defined $opt_f) {
    my @mmdd = laps_tools::JJJ2MMDD($yday,$year);
    $mmdd[0] = "0".$mmdd[0] while(length($mmdd[0])<2);
    $mmdd[1] = "0".$mmdd[1] while(length($mmdd[1])<2);
    print "yday year mmdd is $yday $year $mmdd[0] $mmdd[1]\n";
    $thresh = $year.$mmdd[0].$mmdd[1].$hour;
}else{
    $thresh = $year2.$yday.$hour.$min;
}

# Change to the purge directory and read through list of subdirectories,
# purging those with a name older than thresh

print "Thresh is $thresh\n";

chdir "$purgedir";
opendir (PDIR, "$purgedir");
foreach (readdir PDIR) {
  if (-d "$_") {
    if (/^(\d\d\d\d\d\d\d\d\d)$/ || /^(\d\d\d\d\d\d\d\d\d\d)$/){
      my $dirtime = $1;
      if ($dirtime < $thresh){
        print "Purging $dirtime\n";
        system("rm -rf $dirtime");
      }else{
        print "not purging $dirtime\n";
      }
    }
  }
}

print "Sucessful completion of fcst purger\n";
exit;
