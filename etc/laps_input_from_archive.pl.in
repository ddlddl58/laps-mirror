#!@PERL@

# This script pulls raw data needed for LAPS from the MASS store
# You should have a MASS store account to run this

# Options:
#
# -p root data for output "raw" data (analogous to /public)
#
# -t time desired for data (YYYYMMDD)
#
# -m desired model background (i.e. ruc, fim, or gfs)
#
# -g degrib model background data (supply installroot for the degrib software)
#
# -s desired satellite (e.g. use 8 for goes8) 
#    Note these approximate available date ranges for the western US satellite...
#      10:  3/29/2004 - 10/23/2004
#      10:  4/13/2006 -  6/ 7/2006
#      11:  7/ 7/2006 -  present
#
#    And the eastern satellite...
#       8:       2002
#      12:  1/ 1/2004 -  7/28/2008
#      12: 10/29/2008 -  5/26/2010
#      13:  4/16/2010 -  5/26/2010 
#    east:  5/27/2010 -    present
#
# -i option to get only image data from satellites
#
# -S skip all standard data download from the MSS
#
# -T (optional) analysis type (2D or 3D), default is "3D"
#
# -c (use for compressed data on MSS - before about 2007)

# Require PERL version 5 or newer
require 5;

# Set permissions
umask 002;

# Load packages
use Getopt::Std;
use Time::Local;

# Define command line variables
# opt_t: time (GMT) of LAPS analysis in YYYYMMDD
use vars qw($opt_p $opt_t $opt_m $opt_g $opt_s $opt_i $opt_S $opt_T $opt_c);

getopts('p:t:m:s:ig:ST:c');

require "@prefix@/etc/laps_tools.pm";

my $public = $opt_p;
my ($analysis_yr, $analysis_mo, $analysis_dy, );
print "$public\n";
print "$opt_t\n";
if ($opt_t =~ /^(\d\d\d\d)(\d\d)(\d\d)$/) {
 $analysis_yr = $1;
 $analysis_mo = $2;
 $analysis_dy = $3;
}else{
 print "Unrecognized date format. Should be YYYYMMDD. \n";
 exit;
}

my $t=gmtime(); 

my $type = "3D";
if (defined $opt_T) {
    $type = $opt_T;
}

# In-situ data
if (! defined $opt_S) { 
    if (defined $opt_c) { 
      print $t." Get compressed data\n"; # perhaps use mssTar instead
      system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy.tar\* $public/data/");
      exit;
    }

    print $t." Get metar\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/metar/netcdf/\* $public/data/metar/netcdf/");
    chdir "$public/data/metar/netcdf/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar"); 
#    unlink "\*\.tar";
    $t=gmtime(); 

    print $t." Get madis mesonet\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/LDAD/mesonet/netCDF/\* $public/data/madis/LDAD/mesonet/netCDF/");
    chdir "$public/data/madis/LDAD/mesonet/netCDF/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar"); 
    $t=gmtime(); 

    print $t." Get madis urbanet\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/LDAD/urbanet/netCDF/\* $public/data/madis/LDAD/urbanet/netCDF/");
    chdir "$public/data/madis/LDAD/urbanet/netCDF/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar"); 
    $t=gmtime(); 

    print $t." Get madis hfmetar\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/LDAD/hfmetar/netCDF/\* $public/data/madis/LDAD/hfmetar/netCDF/");
    chdir "$public/data/madis/LDAD/hfmetar/netCDF/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar"); 
    $t=gmtime(); 

    print $t." Get maritime\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/maritime/netcdf/\* $public/data/maritime/netcdf/");
    chdir "$public/data/maritime/netcdf/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar"); 
    $t=gmtime(); 

    if ($type eq "3D"){

        print $t." Get wsi-nexrad\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/radar/wsi/nexrad/netcdf/\* $public/data/radar/wsi/nexrad/netcdf/");
        chdir "$public/data/radar/wsi/nexrad/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get wsi-nowrad\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/radar/wsi/nowrad/netcdf/\* $public/data/radar/wsi/nowrad/netcdf/");
        chdir "$public/data/radar/wsi/nowrad/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get gps\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/gpsmet/netcdf/\* $public/data/gpsmet/netcdf/");
        chdir "$public/data/gpsmet/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get radiometer\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/point/radiometer/netcdf/\* $public/data/madis/point/radiometer/netcdf/");
        chdir "$public/data/madis/point/radiometer/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

#       print $t." Get fsl-conus\n"; # may not be needed since we access the directory for the particular satellite
#       system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/fsl-conus/gs/netcdf/\* $public/data/sat/fsl-conus/gs/netcdf/");
#       chdir "$public/data/sat/fsl-conus/gs/netcdf/";
#       system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
#       system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
#       system("rm \*\.tar"); 
#       $t=gmtime(); 

        print $t." Get raob\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/raob/netcdf/\* $public/data/raob/netcdf/");
        chdir "$public/data/raob/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        if($analysis_yr > 2008){ # MSS dropsondes are decoded properly
            print $t." Get dropsonde from MSS\n";            
            system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/dropsonde/netcdf/\* $public/data/dropsonde/netcdf/");
        } else {                 # Look for reprocessed dropsondes
            print $t." Get reprocessed dropsonde\n";
            system ("cp ~albers/aoml/dropsonde/$analysis_yr/$analysis_mo/$analysis_dy/\* $public/data/dropsonde/netcdf/");
        }
        chdir "$public/data/dropsonde/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar");
        $t=gmtime(); 

        print $t." Get pirep\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/pirep/netcdf/\* $public/data/pirep/netcdf/");
        chdir "$public/data/pirep/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get rass\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/profiler/rass/noaanet/netcdf/\* $public/data/profiler/rass/noaanet/netcdf/");
        chdir "$public/data/profiler/rass/noaanet/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get profiler\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/profiler/wind/noaanet/netcdf/\* $public/data/profiler/wind/noaanet/netcdf/");
        chdir "$public/data/profiler/wind/noaanet/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get bl-rass\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/profiler/rass/external/netcdf/\* $public/data/profiler/rass/external/netcdf/");
        chdir "$public/data/profiler/rass/external/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get bl-profiler\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/profiler/wind/external/netcdf/\* $public/data/profiler/wind/external/netcdf/");
        chdir "$public/data/profiler/wind/external/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get acars\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/acars/qc/netcdf/\* $public/data/acars/qc/netcdf/");
        chdir "$public/data/acars/qc/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get wisdom\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/LDAD/WISDOM/netCDF/\* $public/data/madis/LDAD/WISDOM/netCDF/");
        chdir "$public/data/madis/LDAD/WISDOM/netCDF/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

    } # type is 3D
}


# Model background data
if ($opt_m eq "ruc") {
#   if($analysis_yr < 2008){ # isobaric grib files (no need to be converted to NetCDF)
#        print $t." Get ruc isobaric grib\n";
#        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp_ruc_iso/7/0/105/236/\* $public/data/grids/ruc/ftp_ruc_iso/grib/");
#        chdir "$public/data/grids/ruc/ftp_ruc_iso/grib/";
    if($analysis_yr < 2008){ # hybrid grib files (will need to be converted to NetCDF to work in LGA)
        print $t." Get ruc hybrid grib\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp_ruc_hyb/7/0/105/236/\* $public/data/grids/ruc/hyb_A236/grib/");
        chdir "$public/data/grids/ruc/hyb_A236/grib/";
#   }else{ # isobaric 20km grib2 (from NCEP) 
#       print $t." Get ruc isobaric 20km grib2 (from NCEP)\n";
#       system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp_ruc_iso/7/0/105/0_67725_30/\* $public/data/grids/ruc/iso/grib2/");
#       chdir "$public/data/grids/ruc/iso/grib2/";
#   }else{ # isobaric 13km grib2 (from NCEP) [beginning 6/16/08]
#       print $t." Get ruc isobaric 13km grib2 (from NCEP)\n";
#       system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp_ruc_iso/7/0/105/0_151987_30/\* $public/data/grids/ruc/iso/grib2/");
#       chdir "$public/data/grids/ruc/iso/grib2/";
    }else{ # isobaric 13km grib1 (from ESRL) [beginning 1/1/2008]
        print $t." Get ruc isobaric 13km grib1 (from ESRL)\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/fsl/13kmruc/ruc_presm/\* $public/data/grids/ruc/iso/grib1/");
        chdir "$public/data/grids/ruc/iso/grib1/";
    }

    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar");
    $t=gmtime(); 

    if (defined $opt_g) {
        print $t." Degrib ruc\n";
        if (! -d $opt_g){ die "$opt_g not found! \n";}
        system ("@CSH@ @prefix@/etc/ruc_grib2netcdf.csh $opt_g $public/data/grids/ruc/hyb_A236");
        $t=gmtime(); 

    } else { # make soft links for .grib files
        opendir(TEMPDIR, ".");
        @filelist = readdir TEMPDIR;
        closedir TEMPDIR;
        system ("mkdir links");
        my ($fname,$suffix);
        chdir "./links";
        system ("pwd");
        foreach (@filelist){
            ($fname,$suffix) = split('\.',$_);
#           symlink "../$_", "$fname";
            print  ("ln -s ../$_ $fname");
            system ("ln -s ../$_ $fname");
        }
        unlink "links";

    }

} elsif ($opt_m eq "fim") { # Consider removing forecasts more than 24 hours old?
    print $t." Get fim\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/fsl/fim/grib/\* $public/data/gsd/fim/grib/");
    chdir "$public/data/gsd/fim/grib/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar");
    $t=gmtime(); 

} elsif ($opt_m eq "gfs") {

    my $gfs_anal;
    my $gfs_fcst;

    if($analysis_yr < 2007 || ($analysis_yr == 2007 && $analysis_mo == 1) ||
      ($analysis_yr == 2007 && $analysis_mo == 2 && $analysis_dy == 1) ) { # 1 degree GFS

        print $t." Get 1 degree gfs valid in 24 hour interval\n";

        $gfs_anal="/mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp/7/0/81/3";
        $gfs_fcst="/mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp/7/0/96/3";

        system ("mssGet --verbose $gfs_anal/\*00000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000012 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000015 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000018 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000021 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000024 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*00000027 $public/data/grids/gfs/grib/");

        system ("mssGet --verbose $gfs_anal/\*03000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000012 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000015 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000018 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000021 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*03000024 $public/data/grids/gfs/grib/");

        system ("mssGet --verbose $gfs_anal/\*06000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*06000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*06000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*06000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*06000012 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*06000015 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*06000018 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*06000021 $public/data/grids/gfs/grib/");

        system ("mssGet --verbose $gfs_anal/\*09000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*09000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*09000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*09000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*09000012 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*09000015 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*09000018 $public/data/grids/gfs/grib/");

        system ("mssGet --verbose $gfs_anal/\*12000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*12000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*12000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*12000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*12000012 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*12000015 $public/data/grids/gfs/grib/");

        system ("mssGet --verbose $gfs_anal/\*15000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*15000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*15000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*15000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*15000012 $public/data/grids/gfs/grib/");

        system ("mssGet --verbose $gfs_anal/\*18000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*18000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*18000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*18000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*18000012 $public/data/grids/gfs/grib/");

        system ("mssGet --verbose $gfs_anal/\*21000000 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*21000003 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*21000006 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*21000009 $public/data/grids/gfs/grib/");
        system ("mssGet --verbose $gfs_fcst/\*21000012 $public/data/grids/gfs/grib/");
        $t=gmtime(); 

    } else { # 1/2 degree GFS
        print $t." Get 1/2 degree gfs valid in 24 hour interval\n";

        print " Obtaining analyses...\n";

        $gfs_anal="/mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp/7/0/81/0_259920_0";

        system ("mssGet --verbose $gfs_anal/\*.tar.gz $public/data/grids/gfs/grib/");

        chdir "$public/data/grids/gfs/grib/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 

        $gfs_fcst="/mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/grib/ftp/7/0/96/0_259920_0";
        chdir "$public/data/grids/gfs/grib/";

        print $t." Obtaining subset of forecasts from 0000 hour run...\n";

        my $anal_hhmm,$fcst_hhhh;

#       Convert from yymmdd to yyddd for untarring individual forecasts
        my $doy = &laps_tools::get_julian_day($analysis_dy,$analysis_mo,$analysis_yr); 
        $doy="0".$doy while(length($doy)< 3);
        my $yy  = substr($analysis_yr,2,2);

        foreach $anal_hhmm ("0000","0600","1200","1800"){

            print   "mssGet --verbose $gfs_fcst/$analysis_yr$analysis_mo$analysis_dy$anal_hhmm.tar.gz $public/data/grids/gfs/grib/\n";
            system ("mssGet --verbose $gfs_fcst/$analysis_yr$analysis_mo$analysis_dy$anal_hhmm.tar.gz $public/data/grids/gfs/grib/");

            my $fcst_hh03 = "0003";
            my $fcst_hh06 = "0006";

#           system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
            print   "find -mindepth 1 -maxdepth 1 -name \"\*\.tar\\.gz\" -exec tar -xvf {} $yy$doy$anal_hhmm$fcst_hh03 $yy$doy$anal_hhmm$fcst_hh06 \\;\n";
            system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\\.gz\" -exec tar -xvf {} $yy$doy$anal_hhmm$fcst_hh03 $yy$doy$anal_hhmm$fcst_hh06 \\;");

            system("rm \*\.tar.gz"); 
        }
    }

    if (defined $opt_g) {
        print $t." Degrib gfs\n";
        if (! -d $opt_g){ die "$opt_g not found! \n";}
        system ("@CSH@ @prefix@/etc/ruc_grib2netcdf.csh $opt_g $public/data/grids/gfs");
        $t=gmtime(); 
    }
}	

# Satellite data
if ( ( $opt_s eq "8" || $opt_s eq "10" || $opt_s eq "11" || $opt_s eq "12" || $opt_s eq "13" || $opt_s eq "east" || $opt_s eq "west") && $type eq "3D") {
    my $sat;
    my $satpath;

#   Set satellite part of path
    if(length($opt_s) == 1){
        $sat = "0$opt_s";
    }elsif($opt_s =~ "st"){
        $sat = "-$opt_s";
    }else{
        $sat = "$opt_s";
    }

#   Changing the path based on the choice of satellite!

    if ($opt_s eq "10" || $opt_s eq "11") {
	$satpath = "fsl-pacus"
    } else {
    	$satpath = "fsl-conus"
    }	
 	
#   Satellite imagery
    print $t." Get goes$opt_s $satpath imager\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/fsl-gs/goes$sat\/raw/image/$satpath/netcdf/\* $public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/");
    chdir "$public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/";
    print   "find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;\n";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    print   "find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;\n";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar"); 
    $t=gmtime(); 

    $satpath = "extended";
    print $t." Get goes$opt_s $satpath imager\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/fsl-gs/goes$sat\/raw/image/$satpath/netcdf/\* $public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/");
    chdir "$public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar");
    $t=gmtime(); 

    $satpath = "full-disk";
    print $t." Get goes$opt_s $satpath imager\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/fsl-gs/goes$sat\/raw/image/$satpath/netcdf/\* $public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/");
    chdir "$public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar");
    $t=gmtime(); 

    $satpath = "aoml";
    print $t." Get goes$opt_s $satpath imager\n";
    system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/\* $public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/");
    chdir "$public/data/sat/fsl-gs/goes$opt_s\/raw/image/$satpath/netcdf/";
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
    system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
    system("rm \*\.tar");
    $t=gmtime(); 

#   print $t." Get goes$opt_s imagery (is this used?)\n";
#   system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/nesdis/goes$opt_s\/raw/image/$satpath/netcdf/\* $public/data/grids/sat/nesdis/goes$opt_s\/raw/image/$satpath/netcdf/");
#   chdir "$public/data/grids/sat/nesdis/goes$opt_s\/raw/image/$satpath/netcdf/";
#   system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
#   system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
#   system("rm \*\.tar"); 
#   $t=gmtime(); 

    if (! defined $opt_i) { 
#       Cloud drift winds (OLD)
        print $t." Get goes$opt_s cloud-drift\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/nesdis/goes$opt_s\/wind/cloud-drift/ascii/\* $public/data/sat/nesdis/goes$opt_s\/wind/cloud-drift/ascii/");
        chdir "$public/data/sat/nesdis/goes$opt_s\/wind/cloud-drift/ascii/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get goes$opt_s vapor-drift\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/nesdis/goes$opt_s\/wind/vapor-drift/ascii/\* $public/data/sat/nesdis/goes$opt_s\/wind/vapor-drift/ascii/");
        chdir "$public/data/sat/nesdis/goes$opt_s\/wind/vapor-drift/ascii/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get goes$opt_s visible cloud drift\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/nesdis/goes$opt_s\/wind/visible/ascii/\* $public/data/sat/nesdis/goes$opt_s\/wind/visible/ascii/");
        chdir "$public/data/sat/nesdis/goes$opt_s\/wind/visible/ascii/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get goes$opt_s sounder$opt_s cloud drift\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/nesdis/goes$opt_s\/wind/sounder$opt_s\/ascii/\* $public/data/sat/nesdis/goes$opt_s\/wind/sounder$opt_s\/ascii/");
        chdir "$public/data/sat/nesdis/goes$opt_s\/wind/sounder$opt_s\/ascii/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

#       Cloud drift winds (NEW)
        print $t." Get madis cloud drift winds (3hr)\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/point/HDW/netcdf/\* $public/data/madis/point/HDW/netcdf/");
        chdir "$public/data/madis/point/HDW/netcdf/";
        print "$public/data/madis/point/HDW/netcdf/\n";
        print   'find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;\n';
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        print   'find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;\n';
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get madis cloud drift winds (1hr)\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/point/HDW1h/netcdf/\* $public/data/madis/point/HDW1h/netcdf/");
        chdir "$public/data/madis/point/HDW1h/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

#       POES Soundings
        print $t." Get madis POES soundings\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/madis/point/POES/netcdf/\* $public/data/madis/point/POES/netcdf/");
        chdir "$public/data/madis/point/POES/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

#       Data for the LQ3 analysis
        print $t." Get goes$opt_s tpw\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/nesdis/goes$sat\/tpw/sfov_ihop/ascii/\* $public/data/sat/nesdis/goes$opt_s\/tpw/sfov_ihop/ascii/");
        chdir "$public/data/sat/nesdis/goes$opt_s\/tpw/sfov_ihop/ascii/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get goes$opt_s sounding\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/nesdis/goes$sat\/sounding/binary/\* $public/data/sat/nesdis/goes$opt_s\/sounding/binary/");
        chdir "$public/data/sat/nesdis/goes$opt_s\/sounding/binary/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

        print $t." Get goes$opt_s raw-sounder\n";
        system ("mssGet --verbose /mss/fdr/$analysis_yr/$analysis_mo/$analysis_dy/data/sat/fsl-gs/goes$sat\/raw/sounding/scan-area/netcdf/\* $public/data/sat/fsl-gs/goes$opt_s\/raw/sounding/scan-area/netcdf/");
        chdir "$public/data/sat/fsl-gs/goes$opt_s\/raw/sounding/scan-area/netcdf/";
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\.gz\" -exec gunzip {} \\;");
        system ("find -mindepth 1 -maxdepth 1 -name \"\*\.tar\" -exec tar -xvf {} \\;");
        system("rm \*\.tar"); 
        $t=gmtime(); 

    } # get non image data from satellites

} # get satellite data

print "\n";
print $t." laps_input_from_archive successfully completed...\n";

exit;
