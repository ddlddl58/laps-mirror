#!@PERL@ -T
# nph-laps.cgi (script to display LAPS data)

$DEBUG=0;

# STANDARD PREAMBLE vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
#for security
$ENV{'PATH'} = "/usr/bin:/bin";

#redirect stderr to stdout so we can see err msgs on the web
$|=1;  #force flush of buffers after each print
open (STDERR, ">&STDOUT") || die "can't dup stdout ($!)\n";

use lib "@prefix@/etc/www"; # Path for 'cgi-lib.pl'
require "cgi-lib.pl";    # supplied in $LAPSINSTALLROOT/etc/www (formerly /w3/utilities)

use lib "@prefix@/etc"; # Path for 'laps_tools.pm'
require "laps_tools.pm";                 # supplied in $LAPSINSTALLROOT/etc
require "oputil.pm";                     # supplied in $LAPSINSTALLROOT/etc

use Time::Local;
use Time::HiRes "usleep";

#set up some nice variables
@month=(Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec);
@day=(Sun,Mon,Tue,Wed,Thu,Fri,Sat);

#get directory and URL
use File::Basename;
($basename,$thisDir) = fileparse($0);
#untaint it
$thisDir =~ /([a-zA-Z0-9\.\/\~]*)/;
$thisDir = $1;
my ($basename,$thisURLDir) = fileparse($ENV{'SCRIPT_NAME'} || '.'); 

my $addr2 = pack('C4',split(/\./,$ENV{REMOTE_ADDR}));
my $returnAddress = gethostbyaddr($addr2,2) || $ENV{REMOTE_ADDR} ||
     "(Unknown-Requestor)";

# $web_root is the root directory of the web server and is where the 
# '$web_root/domains/[list of domains]/private_data' soft links
# (to each $LAPS_DATA_ROOT) should be set up
$web_root = "/w3/lapb";

# request_root is where the '$request_root/lapsplot/scratch' directory tree
# should be set up
$request_root = "$web_root/request"; # current directory of this script

my $ncarg_root;
$ncarg_root = "/usr/local/apps/ncarg-4.3.1.LINUX9";

my $default_domain = "co";

$DomainDir = "$web_root/domains";
#$ScratchDir = "/scratch/frd/laps/www";
$ScratchDir = "request/lapsplot/scratch";
mkdir("$web_root/$ScratchDir", 0777 || die "unable to create $web_root/$ScratchDir");

#change to the proper directory
chdir ("$thisDir") ||
          die "Content-type: text/html\n\nCan't cd to $thisDir: $!\n";

# END OF PREAMBLE ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

eval {
 local %SIG;
  $SIG{ALRM}=
    sub{ $cleanDB=0; print STDOUT "<h2>ALARM: TIMEOUT (60 sec)</H2>"; };
    alarm 60; 

#get calling URL
$temp = $ENV{'SCRIPT_NAME'};
#untaint it (the unsafe way!)
$temp =~ /(.*)/;
# check for the right-most slash
$1 =~ m|([^/]*$)|;
$thisURL = $`;
chop $thisURL;
$writeDir = "${thisDir}tmp";

	 
#get time 
$time = time();
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = gmtime($time);
$mp1=$mon+1;
$thisMonth=$month[$mon];
$dayOfWeek=$day[$wday];

#have this expire in 0 hour, so the form won't keep resetting itself.
use HTTP::Date;
$plusOneHour=time() + 1*3600;
my $stringGMT = time2str($plusOneHour);   # Format as GMT ascii time
$server_protocol = $ENV{'SERVER_PROTOCOL'};
# since this is 'nph-', print out the whole header
print "$server_protocol 200 OK\n" .
    "Content-type: text/html\n" .
      "Expires: $stringGMT\n\n";

#parse the query string
&ReadParse(*input) ;

#clean up old files older than .24 hrs

#useful DEBUGGING info vvvvvvvvvvvvvv
if ($DEBUG == 1) {
    print "<pre>\n";
    print &PrintVariables(%input);

    print "input is $input<br>\n";
    while (($first,$last) = each(%input)) {
	@items = split("\0",$last);
	print " |$first|  ==>  |@items|\n";
    }
    print "<P>\n";
}
#end debugging info vvvvvvvvvvvvvvvvv

print<<"EOI";
<html>
<body background="/icons_laps/LongerLAPS.gif">   
EOI

#opendir DOMAINS, "/w3/laps/domains";
#@filelist = readdir DOMAINS;
#close DOMAINS;
#@filelist = sort @filelist;

@domains = split("\0",$input{'domains'});
$n_domains = @domains;
$out_domains="[" . join(',',@domains) . "]";
$ENV{'domains'} = $out_domains;
$ENV{'n_domains'}= $n_domains;
print "$n_domains domain(s) selected: ";
print "@domains....";

@sources = split("\0",$input{'sources'});
$n_sources = @sources;
$out_sources="[" . join(',',@sources) . "]";
print "$n_sources source(s) selected: ";
print "@sources....";

# Personalize the title
my $beka;
if($returnAddress =~ /137\.75\.10\.102/) {
   $beka = 2;
} elsif ($returnAddress =~ /jetson\.fsl\.noaa\.gov/) {
   $beka = 2;
} elsif ($returnAddress =~ /137\.75\.100\.42/) {
   $beka = 1;
} elsif ($returnAddress =~ /cumulus\.fsl\.noaa\.gov/) {
   $beka = 1;
} else {
   $beka = 0;
}

# Set access level
my $lvl_access;
if($returnAddress =~ /noaa\.gov/) {
   $lvl_access = 2;
} else {
   $lvl_access = 1;
#  $lvl_access = 2; # for testing
}

if(! -e "/w3/lapb"){ # Being run outside of ESRL/GSD/EMB
   $lvl_access = 2;
}

#print "beka = $returnAddress $beka ";

$default_title="FSL/LAPS Data Display (On-the-fly)";
if(@sources[0] =~ "wrf" || @sources[0] =~ "arw" || @sources[0] =~ "var" || @sources[0] =~ "nam" || @sources[0] =~ "nmm" || @sources[0] =~ "mean" || @sources[0] =~ "adv") {
    if($beka == 2){
        $default_title="Beka's @sources[0]";
    } elsif($beka == 1) {
        $default_title="Steve's @sources[0]";
    } else {
        $default_title="@sources[0]";
    }
} else {
#   $default_title="FSL/LAPS Data Display (On-the-fly)";
    $default_title="@domains[0] (On-the-fly)";
}

print "<head><title>$default_title</title></head>";

@pressure_levels = split("\0",$input{'pressure_levels'});
$n_levels = @pressure_levels;
print "$n_levels level(s) selected: ";
print "@pressure_levels....";
$out_levels="[" . join(',',@pressure_levels) . "]";
$ENV{'pressure_levels'} = $out_levels;
$ENV{'n_levels'}= $n_levels;

@fields = split("\0",$input{'fields'});
$n_fields = @fields;
print "$n_fields field(s) selected: ";
print "@fields....";
$out_fields="[" . join(',',@fields) . "]";
$n_fields_uc = 0;
foreach $field (@fields) {
    if ($field eq uc($field) && ! ($field eq "REFLCT" && $out_levels =~ "xsect") ){
        $n_fields_uc++
    }
}

print "n_fields_uc = $n_fields_uc ";
print "out_levels = $out_levels ";

#$ENV{'file'} = $file;
$ENV{'file_in'} = $file_in;
$density=$input{'density'};
$thickness=$input{'thickness'};
$frames=$input{'frames'};
$delay=$input{'delay'};
#$ENV{'NewZoom'} = $NewZoom;
$a9time=$input{'a9time'};
$forecast_time=$input{'forecast_time'};
$zoom=$input{'zoom'};
$xcen=$input{'xcen'};
$ycen=$input{'ycen'};
$npix=$input{'npix'};
$ENV{'Domain'} = $Domain;
$CenterLon=$input{'CenterLon'};
$ENV{'CenterLon'} = $CenterLon;

my ($minalt,$maxalt,$jdim); # for allsky, related to $window

$default_title="FSL/LAPS Data Display<br>(Experimental)";
$default_minusHours = 3;
#get time minus $minusHours hours ago as a default starting time
($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = 
    gmtime($time - $default_minusHours*3600);
$mp1=$mon+1;
$file_in =~ s/ /+/g;
$link_prefix="<a href=\"$thisURL/$basename?density=$density&thickness=$thickness&frames=$frames&a9time=$a9time&CenterLon=$CenterLon&pressure_levels=";

#$file = $file_in;
#$domain = $file_in;
$domain = @domains[0];

$err=0;
$montage=0;
my $nmontage = 1;
my $ndims = 0;
my $nrows = 1;
my $ncols = 1;
my $nanims = 1;
my $ntimes = 1;
my $nframes = 0;
my $geom;
my $i4time_fcst;

my $domain_first;
$domain =~ /(.*)/;
$domain_first = $1;

my $laps_data_root;
$laps_data_root = "$DomainDir/$domain_first/private_data";

#Read desired units
my $domain_nl;
my $nl_var;
my $units;
my @units_array;
my $i_montage;
my @i_montage_array;
if(-e "$laps_data_root/static/lapsplot.nl"){
    $domain_nl = "lapsplot.nl";

    $nl_var="c_units_type";
    @units_array=&laps_tools::get_nl_value($domain_nl,$nl_var,$laps_data_root);
    $units=@units_array[0];

    $i_montage=0;
    $nl_var="montage";
    @i_montage_array=&laps_tools::get_nl_value($domain_nl,$nl_var,$laps_data_root);
    $i_montage=@i_montage_array[0];
}

#print "unitsarray = @units_array<br>";
#print "units1 = $units<br>";
#print "i_montage = $i_montage<br>";

my $xcen_safe;
$xcen =~ /(.*)/;
$xcen_safe = $1;

my $ycen_safe;
$ycen =~ /(.*)/;
$ycen_safe = $1;

my $npix_safe;
$npix =~ /(.*)/;
$npix_safe = $1;

my $zoom_safe;
$zoom =~ /(.*)/;
$zoom_safe = $1;

my $zoom_lapsplot;

my $density_safe;
$density =~ /(.*)/;
$density_safe = $1;

my $thickness_safe;
$thickness =~ /(.*)/;
$thickness_safe = $1;

my $delay_safe;
$delay =~ /(.*)/;
$delay_safe = $1;

my $frames_safe;
$frames =~ /(.*)/;
$frames_safe = $1;
my $frames_orig = $frames_safe;

print "frames_orig = $frames_orig";

my $size_safe;
$size_safe = $thickness_safe;

chomp $a9time;

my $a9time_safe;
$a9time =~ /(.*)/;
$a9time_safe = $1;

my $a9time_orig = $a9time_safe;
my $a9time_offset;
my $a9time_last;

#my $a9time_wgi_safe;
my $wgi_file;
my $wgi_file2;
my $wgi_only = 0;
my $animate = "no";
my $sect = "none";

#print "xcen = $xcen $xcen_safe<br>";

#print "sect/window 1 = $sect $window\n";

#print "domain (first) = $domain_first<br>";
chomp $forecast_time;
print " time = $a9time<br>";

#Default units is set above as read in from the lapsplot.nl namelist
if($domain_first =~ "tw_" || $domain_first =~ "tai" || $domain_first =~ "th" || $domain_first =~ "fmi"){
    $units = "metric";
}

#print "units2 = $units<br>";

# Obtain cycle time 
my $laps_cycle_time,$model_fcst_intvl,$cycle_time,$model_fcst_intvl_hr;
my @cycle_array;

$domain_nl = "nest7grid.parms";
if(-e "$laps_data_root/static/nest7grid.parms"){
    $nl_var="model_fcst_intvl";
    @cycle_array=&laps_tools::get_nl_value($domain_nl,$nl_var,$laps_data_root);
    $model_fcst_intvl=@cycle_array[0];
    $model_fcst_intvl_hr = ($model_fcst_intvl/3600.);
}

if ($frames_safe > 1 || $frames_safe =~ "auto"){ 
    if(-e "$laps_data_root/static/nest7grid.parms"){
        $nl_var="laps_cycle_time";
        @cycle_array=&laps_tools::get_nl_value($domain_nl,$nl_var,$laps_data_root);
        $laps_cycle_time=@cycle_array[0];

        if($frames_safe eq "auto-6"){
            $cycle_time=$laps_cycle_time * 6;
        }elsif($frames_safe eq "auto-4"){
            $cycle_time=$laps_cycle_time * 4;
        }elsif($frames_safe eq "auto-3"){
            $cycle_time=$laps_cycle_time * 3;
        }elsif($frames_safe eq "auto-2"){
            $cycle_time=$laps_cycle_time * 2;
        }elsif($frames_safe eq "auto-a"){
            $cycle_time=$laps_cycle_time;
        }elsif($frames_safe eq "auto-f"){
            $cycle_time=$model_fcst_intvl;
        }elsif($frames_safe eq "auto-v"){
            if($model_fcst_intvl > $laps_cycle_time){
                $cycle_time=$model_fcst_intvl;
            }else{
                $cycle_time=$laps_cycle_time;
            }
        }else{
            $cycle_time=$laps_cycle_time;
        }

    }
    $animate = "yes";
}

# Error conditions
if ($n_domains == 0) {
    $err=1;
    print<<"EOI";
<h2>Please select one or more domains...</h2>
</body></html>
EOI
}

if ($n_sources == 0) {
    $err=1;
    print<<"EOI";
<h2>Please select one or more sources...</h2>
EOI
}

if ($n_fields == 0) {
    $err=1;
    print<<"EOI";
<h2>Please select one or more fields...</h2>
EOI
}

if ($n_levels == 0) {
    $err=1;
    print<<"EOI";
<h2>Please select one or more levels...</h2>
EOI
}

if ($frames_safe ne "1" && $a9time_safe eq "") {
    $err=1;
    print<<"EOI";
<h2>Please select a valid end time for multi-frame image...</h2>
</body></html>
EOI
}

if ($frames_safe ne "1" && length($forecast_time) < 9 && $frames_safe =~ "auto"){
    $err=1;
    print<<"EOI";
<h2>Please select a valid initial time for auto multi-frame image...</h2>
</body></html>
EOI
}

if ($n_fields_uc > 0 && ($out_levels =~ "sndg" || $out_levels =~ "allsky")){
    $err=1;
    print<<"EOI";
<h2>Please select a valid initial time for auto multi-frame image...</h2>
</body></html>
EOI
}


my $n_sources_fields = 0;
my $n_sources_obs = 0;
foreach $source (@sources) {
    if(&laps_tools::is_model($source) == 1){
        $n_sources_fields++
    }
    if($source eq "bkgnd" || $source eq "analysis" || $source eq "balanced" ){
        $n_sources_fields++
    }
    if($source eq "obs" && @fields[0] eq "REF_MAX"){
        $n_sources_fields++
    }
    if($source eq "obs" && @fields[0] eq "REFLCT"){
        $n_sources_fields++
    }
    if($source eq "obs" && @fields[0] =~ "SAT"){
        $n_sources_fields++
    }
    if($source eq "obs"){
        $n_sources_obs++
    }
}

# Interleave obs into the sources for montages
#print "<h2>sources = @sources</h2>";
#print "<h2>n_fields_uc = $n_fields_uc</h2>";
my @sources_obs;
foreach $source (@sources) {
#   print "<h2>testing source $source</h2>";
    if( ($source ne "obs" && $source ne "diff" && $source ne "DIFF" && $n_fields_uc > 0) && $n_sources_obs > 0){
        push(@sources_obs,$source);
#       print "<h2>push sources 1a = $source | @sources_obs</h2>";
        push(@sources_obs,"obs");
#       print "<h2>push sources 1b = $source | @sources_obs</h2>";
#   }else{
#       push(@sources_obs,$source);
#       print "<h2>push sources 2  = $source | @sources_obs</h2>";
    }
}
if($n_sources_obs > 0 && $n_sources >= 2 && $n_fields_uc > 0){
    @sources = @sources_obs;
    print "<h2>interleaved sources = @sources</h2>";
}

#if($n_fields_uc == 9999 && $n_fields_uc > 1 && $n_sources_fields > 0 && ! (@fields[0] eq "CLDCLV" && @fields[1] eq "REFLCT" && $out_levels eq "xsect") ){ # exception for cloud/radar combo (no montage for cloud/radar overlay)

if ($n_fields_uc > 0 && ($out_levels =~ "sndg" || $out_levels =~ "allsky")){
    print '<h2><font color="red">Error: lower case fields should be used for soundings...</font></h2>';
    $err=1;

}elsif($n_domains > 1 && $n_sources_fields >  1 &&  ($n_fields_uc > 1 || $n_levels > 1 ) ){
    print '<h2><font color="red">Error: 3-D montage is not supported...</font></h2>';
    $err=1;

}else{
#   if($n_domains == 1 && $n_sources_fields >  1 && ($n_fields_uc == 1 || $n_fields > 1) ){
    if($n_domains == 1 && $n_sources_fields >  1 &&  $n_fields_uc == 1 && $n_levels == 1 ){
        print "<h2>Montage multiple sources...</h2>";
#       $err=1;
        $montage=1;
        $ndims=1;
    }
    if($n_domains == 1 && $n_sources_fields == 1 && $n_fields_uc >  1){
        print "<h2>Montage multiple fields...</h2>";
#       $err=1;
        $montage=1;
        $ndims=1;
    }
    if($n_domains > 1 && $n_sources_fields == 1 && $n_fields_uc >  1){
        print "<h2>Montage multiple domains and fields (experimental)...</h2>";
        $montage=1;
        $ndims=2;
    }
    if($n_domains == 1 && $n_sources_fields > 1 && $n_fields_uc >  1){
        print "<h2>Montage multiple sources and fields (experimental)...</h2>";
        $montage=1;
        $ndims=2;
    }
    if($n_domains == 1 && $n_sources_fields > 1 && $n_levels >  1){
        print "<h2>Montage multiple sources and levels (experimental)...</h2>";
        $montage=1;
        $ndims=2;
    }
    if($n_domains == 1 && $n_fields_uc > 1 && $n_levels >  1){
        print "<h2>Montage multiple fields and levels (experimental)...</h2>";
        $montage=1;
        $ndims=2;
    }
    if($n_domains == 1 && $n_sources_fields == 1 && $n_fields_uc == 1 && $n_levels > 1 && @fields[0] ne "PRCP_H2O"){
        print "<h2>Montage multiple levels...</h2>";
        $montage=1;
        $ndims=1;
    }
}

# Montage for multiple domains
if($n_domains > 1 && ($n_sources_fields == 1 || @sources[0]=~ "obs") && ($n_fields_uc == 1 || @fields[0]=~ "radial_vel") ){
    print "<h2>Montage multiple domains...</h2>";
    $montage=1;
    $ndims=1;
}
#if($n_domains > 1 && ($n_sources_fields >= 2 || @sources[0]=~ "obs") && ($n_fields_uc > 0 || @fields[0]=~ "radial_vel") ){  # Experimental
if($n_domains > 1 && ($n_sources_fields >= 2                        ) && ($n_fields_uc > 0 || @fields[0]=~ "radial_vel") ){  # Experimental
    print "<h2>Montage multiple domains and sources (experimental)...</h2>";
    $montage=1;
    $ndims=2;
}

# Generate product
if($err == 0) {
# Write a lapsplot.in file
# $logFile = "$thisDir/lapsplot/lapsplot.in";
  $logFile = "$web_root/$ScratchDir/lapsplot.in_$$";
  open(LAPSPLOT,">$logFile") ||
        die "Content-type: text/html\n\nCan't open $logFile: $!\n";

# Determine if one of the sources is a forecast, if so obtain $a9time from the $systime
  $fcst=0;
  foreach $source (@sources) {
    if(&laps_tools::is_model($source) == 1){
        $fcst=1;
    }
  }

  if($frames_safe =~ "auto"){
    $frames_safe = 1;
    if(length($forecast_time) > 8){

#       If length is 9 or 10 we can assume $forecast_time is really initial time and
#       then subtract initial time from valid time to yield forecast time

        my $i4time_valid = &laps_tools::a9time_to_i4time($a9time_orig);
        my $i4time_initial = &laps_tools::a9time_to_i4time($forecast_time);
        $i4time_fcst = $i4time_valid - $i4time_initial;
#       print " forecast seconds = $i4time_fcst";
#       print " auto cycle_time = $cycle_time";
        $frames_safe = ($i4time_fcst / $cycle_time) + 1;
#       print " auto frames_safe = $frames_safe";
        $frames = $frames_safe;
        print " auto frames = $frames";
        if($frames > 200){
            print " ERROR: too many frames = $frames\n";
            exit;
        }
    }
  }

  while($frames_safe > 0){

    if($a9time_safe ne ""){

#     Subtract from the a9time based on the frame count 
#     print "a9time orig = $a9time_orig ";

#     Convert a9time to i4time
      my ($i4time_orig);
      $i4time_orig = &laps_tools::a9time_to_i4time($a9time_orig);
#     print "i4time_orig is $i4time_orig ";

#     Offset the i4time
      my ($i4time_offset,$i4time_new);
      $i4time_offset = ($frames_safe - 1) * $cycle_time;
      $i4time_new = $i4time_orig - $i4time_offset;
#     print "i4time new = $i4time_new ";

#     Convert offset i4time to a9time
      $a9time_safe = &laps_tools::i4time_to_a9time($i4time_new);

      if(($frames_safe == $frames_orig) && ($a9time_safe != $a9time_orig)){ 
          print " a9time start = $a9time_safe\n";
      }

    }

#   Signal new time after the first frame
#   print " nt frames = $frames";
#   print " nt frames_safe = $frames_safe";

    if($frames != $frames_safe){ 
        printf LAPSPLOT "nt\n";
        $ntimes++;
    }

#   Print a9time (either with a value or blank)
    if($fcst == 1 && $a9time eq ""){
#       print "fcst = $fcst";

#       Get the latest a9time from the systime.dat
#       my($jjj,$hh,$dd,$MMM,$yyyy,$time,$mm,$yy,$rtime,$yy,$hhmm);
        if(open(LAPSTIME,"$laps_data_root/time/systime.dat")){
            my @lapstime = <LAPSTIME>;
#           print "lapstime = @lapstime";
            close(LAPSTIME);
            $lapstime[1] =~ /(\d\d\d\d\d\d\d\d\d)/;
            $a9time_fcst = $1;
#           print "a9time_fcst = $a9time_fcst";
            printf LAPSPLOT "$a9time_fcst\n";
        }

    }else{

#       If this is blank it means latest time
        printf LAPSPLOT "$a9time_safe\n";
#       printf LAPSPLOT " \n";

    }

    my $overlay = 0;
#   $sect = "none";
    my $sounding;

#   Print the field

    my $obs_sfc = "none";
    my $obs_sfc_qc = 0;
    my $hhmm;

    if(length($forecast_time) > 8){

#       If length is 9 or 10 we can assume $forecast_time is really initial time and
#       then subtract initial time from valid time to yield forecast time

        my $i4time_valid = &laps_tools::a9time_to_i4time($a9time_safe);
        my $i4time_initial = &laps_tools::a9time_to_i4time($forecast_time);
        $i4time_fcst = $i4time_valid - $i4time_initial;
#       print " forecast seconds = $i4time_fcst";
        my $fcsthh = int($i4time_fcst / 3600);
        $fcsthh = "0".$fcsthh while(length($fcsthh)<2);     
        my $fcstmm = int( ($i4time_fcst-$fcsthh*3600) / 60);
        $fcstmm = "0".$fcstmm while(length($fcstmm)<2);     
        $hhmm = "$fcsthh"."$fcstmm";
        print " derived hhmm = $hhmm";

    }else{ # If length is 4 or 5
        $hhmm = $forecast_time;
        print "$hhmm";

    }

#   Correct zoom_safe if it is invalid
#   if($zoom_safe > 50. && @pressure_levels[0] != "xsect"){$zoom_safe = 1.00;}

    my $a9time_wgi = $a9time_safe;
    $a9time_wgi =~ /(\d\d\d\d\d\d\d\d\d)/;
    $a9time_wgi = $1;

    my $dot = ".";

    foreach $domain (@domains) {

#     my $domain_safe;
#     $domain =~ /(.*)/;
#     $domain_safe = $1;

#     if($domain ne $domain_first){
#         printf LAPSPLOT "fc\n"; 
#         printf LAPSPLOT "$DomainDir/$domain/private_data\n"; 
#     }

      foreach $source (@sources) {
        $sounding = 0;

        if ("$source" eq "what-got-in" ) {                                                                  # What-got-in stuff
            if ($n_sources == 1) {
                $wgi_only = 1;
            }

            if($a9time_wgi eq ""){

                print "<h2>What-got-in option selected...</h2>";

#               Get the latest a9time from the systime.dat

#               my($jjj,$hh,$dd,$MMM,$yyyy,$time,$mm,$yy,$rtime,$yy,$hhmm);
                if(open(LAPSTIME,"$laps_data_root/time/systime.dat")){
                    my @lapstime = <LAPSTIME>;
                    close(LAPSTIME);
                    $lapstime[1] =~ /(\d\d\d\d\d\d\d\d\d)/;
                    $a9time_wgi = $1;
                }

            }else{
                print "<h2>What-got-in option selected at $a9time_wgi...</h2>";

            }

            if ($out_levels =~ "[0-1,3-9]" || $out_levels =~ "xsect" || $out_fields =~ "PRCP_H2O" ) {  # Primarily 3D fields
#             print "<h2>Debug: What-got-in options selected for 3D fields $out_levels $out_fields</h2>";
              if ($out_fields =~ "wind" || $out_fields =~ "WIND" || $out_fields eq "WIND_U" || $out_fields eq "wind_u" || $out_fields eq "WIND_V" || $out_fields eq "wind_v") {                                                    # Wind
#               print "<h2>Debug: Match found for $out_fields</h2>";
                $wgi_file = "$laps_data_root/log/wind\.wgi\.$a9time_wgi";
                $wgi_file2 = "$laps_data_root/log/wind3d\.wgi\.$a9time_wgi";
                if( -e "$wgi_file"){
                    print "<h2>What-got-in wind analysis for $a9time_wgi...</h2>";
                    print "<pre>";
                    system("cat $wgi_file");
                    print "</pre>";
                }elsif( -e "$wgi_file2"){
                    print "<h2>What-got-in wind analysis for $a9time_wgi...</h2>";
                    print "<pre>";
                    system("cat $wgi_file2");
                    print "</pre>";
                }else{
                    print "<h2>What-got-in wind info N/A for $a9time_wgi...</h2>";
                }
              }

              if ($out_fields =~ "temp" || $out_fields =~ "TEMP") {                                                    # Temp
                $wgi_file = "$laps_data_root/log/temp\.wgi\.$a9time_wgi";
                if( -e "$wgi_file"){
                    print "<h2>What-got-in temp analysis for $a9time_wgi...</h2>";
                    print "<pre>";
                    system("cat $wgi_file");
                    print "</pre>";
                }else{
                    print "<h2>What-got-in temp info N/A for $a9time_wgi...</h2>";
                }
              }

              if ($out_fields =~ "rh" || $out_fields =~ "RH" || $out_fields =~ "sh" || $out_fields =~ "SH" || $out_fields =~ "mr" || $out_fields =~ "MR" || $out_fields =~ "dewpoint" || $out_fields =~ "DEWPOINT" || $out_fields =~ "PRCP_H2O") {          # Humidity
                $wgi_file  = "$laps_data_root/log/lq3driver\.wgi\.$a9time_wgi";
                $wgi_file2 = "$laps_data_root/log/hum3d\.wgi\.$a9time_wgi";
                if( -e "$wgi_file"){
                    print "<h2>What-got-in humidity analysis for $a9time_wgi...</h2>";
                    print "<pre>";
                    system("cat $wgi_file");
                    print "</pre>";
                }elsif( -e "$wgi_file2"){
                    print "<h2>What-got-in humidity analysis for $a9time_wgi...</h2>";
                    print "<pre>";
                    system("cat $wgi_file2");
                    print "</pre>";
                }else{
                    print "<h2>What-got-in humidity info N/A for $a9time_wgi...</h2>";
                }
              }

            }

            if ($out_fields =~ "cld_" || $out_fields =~ "CLD_" || $out_fields =~ "ref" || $out_fields =~ "REF" || $out_fields =~ "sat_" || $out_fields =~ "SAT_") {    # Cloud fields
              $wgi_file = "$laps_data_root/log/cloud\.wgi\.$a9time_wgi";
              if( -e "$wgi_file"){
                  print "<h2>What-got-in cloud analysis for $a9time_wgi...</h2>";
                  print "<pre>";
                  system("cat $wgi_file");
                  print "</pre>";
              }else{
                  print "<h2>What-got-in cloud info N/A for $a9time_wgi...</h2>";
              }
            }

            if ($out_levels =~ "sfc" && ! ($out_fields =~ "PRCP_H2O")) {                            # Surface
#           if ($out_levels =~ "sfc") {                                                             # Surface
                $wgi_file = "$laps_data_root/log/sfc\.wgi\.$a9time_wgi";
                if( -e "$wgi_file"){
                    print "<h2>What-got-in sfc analysis for $a9time_wgi...</h2>";
                    print "<pre>";
                    system("cat $wgi_file");
                    print "</pre>";
                }else{
                    print "<h2>What-got-in sfc info N/A for $a9time_wgi...</h2>";
                }
            }

        }elsif ("$source" =~ "DIFF" ) { 
            if($n_fields_uc > 0){
                print '<h2><font color="red">Warning: DIFF should be used only with lower case fields...</font></h2>';

                if($out_levels =~ "xsect"){
                    printf LAPSPLOT "dfi\n"; 
                }else{
                    printf LAPSPLOT "dii\n"; 
                }

            } elsif ($n_domains > 1 && $montage == 0) {
#               print "<h2>DIFF source is $source (1)</h2>"; 
                if ($n_sources_fields == 1 && $n_fields == 1 && $n_levels == 1){ 
                    if($domain ne $domain_first){
                        print "<h2>Note: $source is for multiple domains $domain $domain_first</h2>"; 
                        if($out_levels =~ "xsect"){
                            printf LAPSPLOT "dfi\n"; 
                        }else{
                            if ("$source" eq "DIFF" ) {
                                printf LAPSPLOT "dii\n"; 
                            }elsif ("$source" eq "DIFF_20" ) {
                                printf LAPSPLOT "dt2i\n"; 
                            }elsif ("$source" eq "DIFF_30" ) {
                                printf LAPSPLOT "dt3i\n"; 
                            }elsif ("$source" eq "DIFF_40" ) {
                                printf LAPSPLOT "dt4i\n"; 
                            }
                        }
                    }
                }else{
                    print "<h2>Warning: $source should be used only with a single domain...</h2>"; 
                }

            } else {

#               print "<h2>DIFF source is $source (2)</h2>"; 
                if($out_levels =~ "xsect"){
                    printf LAPSPLOT "dfi\n"; 
                }else{
                    if ($source eq "DIFF" ) {
                        printf LAPSPLOT "dii\n"; 
                    }elsif ("$source" eq "DIFF_20" ) {
                        printf LAPSPLOT "dt2i\n"; 
                    }elsif ("$source" eq "DIFF_30" ) {
                        printf LAPSPLOT "dt3i\n"; 
                    }elsif ("$source" eq "DIFF_40" ) {
                        printf LAPSPLOT "dt4i\n"; 
                    }
                }

            }

        }elsif ("$source" eq "diff" ) {

            if($n_fields_uc > 0){
                print '<h2><font color="red">Warning: diff should be used only with lower case fields...</font></h2>';

                if($out_levels =~ "xsect"){
                    printf LAPSPLOT "df\n"; 
                }else{
                    printf LAPSPLOT "di\n"; 
                }

            } elsif ($n_domains > 1 && $montage == 0) {
                if ($n_sources_fields == 1 && $n_fields == 1 && $n_levels == 1){ 
                    if($domain ne $domain_first){
                        print "<h2>Note: diff is for multiple domains $domain $domain_first</h2>"; 
                        if($out_levels =~ "xsect"){
                            printf LAPSPLOT "df\n"; 
                        }else{
                            printf LAPSPLOT "di\n"; 
                        }
                    }
                }else{
                    print "<h2>Warning: diff should be used only with a single domain...</h2>"; 
                }

            } else {

                if($out_levels =~ "xsect"){
                    printf LAPSPLOT "df\n"; 
                }else{
                    printf LAPSPLOT "di\n"; 
                }

            }

        }else{ # other source

            foreach $field (@fields) {

               foreach $level (@pressure_levels) {

#                 This was commented out to allow fcst model terrain to be overlain with fcst 850hPa height
#                 next if (($field eq "ht" || $field eq "HT") && $n_levels > 1 && $level eq "sfc/2d");

#                 if("$level" eq "sndg" && "$source" =~ "obs"){
#                     print "<h2>WARNING: sndg $source is under construction...</h2>";
#                 }

                  if ("$level" eq "xsect" && $n_levels > 1){
                      print "<h2>Error: xsect cannot be combined with other levels...</h2>";
                  }

                  if ("$level" eq "sndg" && $n_levels > 1){
                      print "<h2>Error: sndg cannot be combined with other levels...</h2>";
                  }

                  if ("$level" eq "allsky" && $n_levels > 1){
                      print "<h2>Error: allsky cannot be combined with other levels...</h2>";
                  }

                  if($overlay == 0 || "$level" eq "sndg" || "$level" eq "allsky"){
                      if("$level" eq "xsect"){
                          $sect = "xsect";
                          printf LAPSPLOT "xz\n";
                          printf LAPSPLOT "$density_safe,$thickness_safe\n";
                          printf LAPSPLOT "$zoom_safe\n";
                          printf LAPSPLOT "$xcen_safe,$ycen_safe\n";
                      }elsif("$level" eq "sndg"){
                          $sect = "sndg";
#                         if($overlay > 0){
#                             printf LAPSPLOT "q\n";
#                         }
                          if($overlay == 0){
                             printf LAPSPLOT "sz\n";
                             printf LAPSPLOT "$size_safe\n";
                             printf LAPSPLOT "$xcen_safe\n";
                             printf LAPSPLOT "$ycen_safe\n";
                          }

                          if("$source" =~ "obs"){
                              printf LAPSPLOT "1\n";
                          }else{
                              printf LAPSPLOT "0\n";
                          }

                      }elsif("$level" eq "allsky"){
                          $sect = "allsky";
#                         if($overlay > 0){
#                             printf LAPSPLOT "q\n";
#                         }
                          if($overlay == 0){
                             printf LAPSPLOT "az\n";
                             printf LAPSPLOT "$zoom_safe\n";
                             printf LAPSPLOT "$thickness_safe,$density_safe\n";
                             printf LAPSPLOT "1\n";

                             my($height,$height_in); # for ht agl
                             ($xcen_safe,$height_in) = split (',',$xcen_safe) ;

                             printf LAPSPLOT "$xcen_safe\n";
                             printf LAPSPLOT "$ycen_safe\n";

                             if(defined $height_in){
                                 $height = $height_in;
		             }elsif("$xcen_safe" eq "40.050l" && "$ycen_safe" eq "-105.004l"){
                                 $height = 300.;
                             }else{
                                 $height = 0.;
                             }

                             printf LAPSPLOT "$height\n";
                          }

                      }else{
                          $sect = "hsect";
                          printf LAPSPLOT "hz\n";
                          if($zoom_safe < 1.00){$zoom_safe = 1.00;}
                          if($zoom_safe > 50.0){$zoom_safe = 1.00;}

#                         $zoom_lapsplot = $zoom_safe * ( $density_safe**2 );
#                         printf LAPSPLOT "$zoom_safe,$density_safe\n";

                          $zoom_lapsplot = $zoom_safe * ( $npix/885. );

                          printf LAPSPLOT "$zoom_lapsplot,$density_safe,$thickness_safe,$xcen_safe,$ycen_safe,$zoom_safe,$size_safe\n";

#                         printf LAPSPLOT "fc\n"; 
#                         printf LAPSPLOT "$DomainDir/$domain/private_data\n"; 

                      }
                  }

                  if($sect eq "hsect" || $sect eq "xsect"){
                      print "checking for montage n_sources / n_sources_fields = $n_sources $n_sources_fields n_levels is $n_levels<br>\n";
#                     if($montage == 1 && $domain ne $domain_first && $field eq uc($field) && ! ($field eq "REFLCT" && $out_levels =~ "xsect") ){ 
                      if($montage == 1 && $n_domains > 1 && $n_sources > 1 && ($domain eq $domain_first && $source eq $sources[0]) && $source ne "obs" && $field eq $fields[0]){ # montage multiple domains/sources (2D)
                          $nframes++;
                          print "multiple domains/sources $nframes field/fields(0) is $field $fields[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence     
                              $nmontage++;
                          }
                          if($i_montage < 1){
                              $animate = $nmontage; # animate 1D montages?
                          }else{
                              $animate = $nmontage;
                          }
                      }elsif($montage == 1 && $n_domains > 1 && $n_fields_uc > 1 && $domain eq $domain_first && $field eq uc($field) && $field eq $fields[0]){ # montage multiple domains/fields (2D)
                          $nframes++;
                          print "multiple domains/fields $nframes field/fields(0) is $field $fields[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence     
                              $nmontage++;
                          }
                          if($i_montage < 0){
                              $animate = $nmontage; # animate 1D montages?
                              $animate = "yes"; # animate 1D montages?
                          }else{
                              $animate = $nmontage;
                          }
                      }elsif($montage == 1 && $n_sources > 1 && $n_fields_uc > 1 && $source eq $sources[0] && $field eq uc($field) && $field eq $fields[0]){ # montage multiple sources/fields (2D)
                          $nframes++;
                          print "multiple sources/fields field/fields(0) is $field $fields[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence     
                              $nmontage++;
                          }
                          if($i_montage < 1){
                              $animate = $nmontage; # animate 1D montages?
                          }else{
                              $animate = $nmontage;
                          }
                      }elsif($montage == 1 && $n_sources > 1 && $n_levels > 1 && $source eq $sources[0] && $level eq $pressure_levels[0]){ # montage multiple sources/levels (2D)
                          $nframes++;
                          print "multiple sources/levels $nframes level/pressure_level(0) is $level $pressure_levels[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence     
#                             $nmontage++;
                              $nmontage = $n_levels;
                          }
                          if($i_montage < 1){
                              $animate = $nmontage; # animate 1D montages?
                          }else{
                              $animate = $nmontage;
                          }
                      }elsif($montage == 1 && $n_fields_uc > 1 && $n_levels > 1 && $field eq $fields[0] && $field eq uc($field) && $level eq $pressure_levels[0]){ # montage multiple fields/levels (2D)
                          $nframes++;
                          print "multiple fields/levels $nframes field/fields(0) is $field $fields[0] level/pressure_level(0) is $level $pressure_levels[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence     
#                             $nmontage++;
                              $nmontage = $n_levels;
                          }
                          if($i_montage < 1){
                              $animate = $nmontage; # animate 1D montages?
                          }else{
                              $animate = $nmontage;
                          }
#                         $ncols = $n_levels;
#                         $nrows = $n_fields_uc;
                      }elsif($montage == 1 && $n_domains > 1 && $domain eq $domain_first && $n_sources_fields == 1 && $n_fields_uc == 1 && $source eq $sources[0] && $field eq $fields[0]){ # montage multiple domains
                          $nframes++;
                          print "multiple domains field/fields(0) is $field $fields[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence
                              $nmontage++;
                          }
                          if($i_montage < 1){
                              $animate = "yes";
                          }else{
                              $animate = $nmontage;
                          }
                      }elsif($montage == 1 && $domain eq $domain_first && $source eq $sources[0] && $source ne "obs" && $n_fields_uc == 1 && $field eq $fields[0] && $n_levels == 1){ # montage multiple sources
                          $nframes++;
                          print "multiple sources field/fields(0) is $field $fields[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence
                              $nmontage++;
                          }
                          if($i_montage < 1){
                              $animate = "yes";
                          }else{
                              $animate = $nmontage;
                          }
# debug (n_levels test ==1 is an issue)
#                     }elsif($montage == 1 && $domain eq $domain_first && $n_sources_fields == 1 && $n_levels == 1 && $source eq $sources[0] && $field eq $fields[0] && $field eq uc($field) && ! ($field eq "REFLCT" && $out_levels eq "xsect") ){ # montage multiple fields
                      }elsif($montage == 1 && $domain eq $domain_first && $n_sources_fields == 1 && $n_levels < 2  && $source eq $sources[0] && $field eq $fields[0] && $field eq uc($field) && ! ($field eq "REFLCT" && $out_levels eq "xsect") ){ # montage multiple fields
                          $nframes++;
#                         print "multiple fields field/fields(0) is $field $fields[0] n_levels is $n_levels n_fields_uc is $n_fields_uc level/pressure_level(0) is $level $pressure_levels[0]<br>\n";
                          print "multiple fields field/fields(0) is $field $fields[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence
                              $nmontage++;
                          }
                          if($i_montage < 1){
                              $animate = "yes";
                          }else{
                              $animate = $nmontage;
                          }
                      }elsif($montage == 1 && $domain eq $domain_first && $n_sources_fields == 1 && $n_fields_uc == 1 && $field eq $fields[0] && ( ! ($field =~ "SAT") ) && $level eq $pressure_levels[0] && $source ne "obs"){ # montage multiple levels
                          $nframes++;
                          print "multiple levels level/pressure_level(0) is $level $pressure_levels[0]<br>\n";
                          if($nframes > 1){
                              printf LAPSPLOT "fc\n"; 
			  }else{
                              printf LAPSPLOT "fc\n"; 
                          }
                          $animate = "yes";
                          if($a9time_safe == $a9time_orig){ # first frame in time sequence
                              $nmontage++;
                          }
#                     }elsif($montage == 1 && $nframes > 1 && $field eq uc($field)){
                      }elsif($montage == 1 && $field eq uc($field) && ($source ne "obs" || $field eq "REFLCT") ){
                          $nframes++;
                          print "montage general case: $nframes $a9time_safe $a9time_last $domain $source $field $level<br>\n";
#                         if($frames == $frames_safe || $nframes == 1){ 
#                         if($a9time_safe eq $a9time_last && $nframes > 1 && $frames == $frames_safe){                       
                          if($a9time_safe eq $a9time_last && $nframes > 1){                       
                             printf LAPSPLOT "fcf\n"; 
                          }else{ # "q" will do a frame advance
                             printf LAPSPLOT "fc\n"; 
                          }
#                         This change may help with obs montages, and may hurt with multiple domains and sources
                          if($i_montage < 1){
                              $animate = "yes";
                          }
                      }else{
                          printf LAPSPLOT "fc\n"; 
                      }
                      $a9time_last = $a9time_safe;
                      printf LAPSPLOT "$DomainDir/$domain/private_data\n"; 
                  }

                  if($sect eq "sndg" || $sect eq "allsky"){
                      printf LAPSPLOT "$DomainDir/$domain/private_data\n"; 
                  }

#                 print "overlay/level/sect is $overlay $level $sect<br>\n";

                  $overlay = $overlay + 1;
                  $sounding = $sounding + 1;

                  if(&laps_tools::is_model($source) == 1){
                      if("$level" eq "sfc/2d"){                # fsf sfc forecast
                          if   ("$field" eq "p_msl" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "slp\n"; 

                          }elsif("$field" eq "P_MSL" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "slpi\n"; 
      
                          }elsif("$field" eq "P_STN" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "psfi\n"; 
      
                          }elsif("$field" eq "stn_p" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "psf\n"; 
      
                          }elsif("$field" eq "P_RED" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "pi\n"; 
      
                          }elsif("$field" eq "red_p" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "p\n"; 
      
                          }elsif("$field" eq "TEMP" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tsfi\n"; 
                              if($units eq "english"){
                                  printf LAPSPLOT "f\n"; 
                              }else{
                                  printf LAPSPLOT "c\n"; 
                              }
      
                          }elsif("$field" eq "temp" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tsf\n"; 
                              if($units eq "english"){
                                  printf LAPSPLOT "f\n"; 
                              }else{
                                  printf LAPSPLOT "c\n"; 
                              }
      
                          }elsif("$field" eq "SFCT" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tgdi\n"; 
                              if($units eq "english"){
                                  printf LAPSPLOT "f\n"; 
                              }else{
                                  printf LAPSPLOT "c\n"; 
                              }
      
                          }elsif("$field" eq "sfct" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tgd\n"; 
                              if($units eq "english"){
                                  printf LAPSPLOT "f\n"; 
                              }else{
                                  printf LAPSPLOT "c\n"; 
                              }

                          }elsif("$field" eq "DEWPOINT" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "dsfi\n"; 
                              if($units eq "english"){
                                  printf LAPSPLOT "f\n"; 
                              }else{
                                  printf LAPSPLOT "c\n"; 
                              }
      
                          }elsif("$field" eq "dewpoint" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "dsf\n"; 
                              if($units eq "english"){
                                  printf LAPSPLOT "f\n"; 
                              }else{
                                  printf LAPSPLOT "c\n"; 
                              }
      
                          }elsif("$field" eq "MR" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "msfi\n"; 
      
                          }elsif("$field" eq "mr" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "msf\n"; 
      
                          }elsif("$field" eq "wind_u" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "usf\n"; 
      
                          }elsif("$field" eq "wind_v" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "vsf\n"; 
      
                          }elsif("$field" eq "rh" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "rh\n"; 
      
                          }elsif("$field" eq "RH" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "rhi\n"; 
      
                          }elsif("$field" eq "prcp_h2o" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tpw\n"; 
      
                          }elsif("$field" eq "PRCP_H2O" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tpwi\n"; 
      
                          }elsif("$field" eq "wind" ) { 
                              printf LAPSPLOT "wr\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "vc\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
      
                          }elsif("$field" eq "WIND_SPD" ) { 
                              printf LAPSPLOT "wri\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "sp\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "wind_spd" ) { 
                              printf LAPSPLOT "wr\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "sp\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "thetae" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "the\n"; 
      
                          }elsif("$field" eq "THETAE" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "thei\n"; 
      
                          }elsif("$field" eq "CAPE" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "pbei\n"; 

                          }elsif("$field" eq "cape" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "pbe\n"; 
      
                          }elsif("$field" eq "CIN" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "nbei\n"; 

                          }elsif("$field" eq "cin" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "nbe\n"; 

                          }elsif("$field" eq "HELICITY" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lhei\n"; 

                          }elsif("$field" eq "helicity" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lhe\n"; 

                          }elsif("$field" eq "UPD_HEL" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "uhei\n"; 

                         }elsif("$field" eq "WTBLB0" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tw0i\n"; 
 
                         }elsif("$field" eq "wtblb0" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tw0\n"; 
 
                         }elsif("$field" eq "WTBLB1" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tw1i\n"; 
 
                         }elsif("$field" eq "wtblb1" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "tw1\n"; 
 
                         }elsif("$field" eq "REF_MAX" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lmri\n"; 

                          }elsif("$field" eq "ref_max" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lmr\n"; 

                         }elsif("$field" eq "REF_ETOP" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lmti\n"; 

                          }elsif("$field" eq "REFLCT" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "llri\n"; 

                          }elsif("$field" eq "reflct" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "llr\n"; 

#                         }elsif("$field" eq "CLD_LIQ"){ 
#                             printf LAPSPLOT "lsi\n"; 
#                             printf LAPSPLOT "-1\n"; 
#                             printf LAPSPLOT "f\n"; 
#                             printf LAPSPLOT "$source\n";
#                             printf LAPSPLOT "$hhmm\n";

#                         }elsif("$field" eq "cld_liq"){ 
#                             printf LAPSPLOT "ls\n"; 
#                             printf LAPSPLOT "-1\n"; 
#                             printf LAPSPLOT "f\n"; 
#                             printf LAPSPLOT "$source\n";
#                             printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "CLD_LIQ"){ 
                              printf LAPSPLOT "isi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "cld_liq"){ 
                              printf LAPSPLOT "is\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "CLD_ICE"){ 
                              printf LAPSPLOT "iei\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "cld_ice"){ 
                              printf LAPSPLOT "ie\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "CLD_CND"){ 
                              printf LAPSPLOT "ini\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "cld_cnd"){ 
                              printf LAPSPLOT "in\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "FIREWX" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "fwxi\n"; 

                          }elsif("$field" eq "firewx" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "fwx\n"; 

                          }elsif("$field" eq "FIRE_FBG" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "fwii\n"; 

                          }elsif("$field" eq "fire_fbg" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "fwi\n"; 

                          }elsif("$field" eq "FIRE_VENT" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "vnti\n"; 

                          }elsif("$field" eq "fire_vent" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "vnt\n"; 

                          }elsif("$field" eq "UMFLUX" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "umfi\n"; 

                          }elsif("$field" eq "umflux" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "umf\n"; 

                          }elsif("$field" eq "FIRE_HAINES" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "hahi\n"; 

                          }elsif("$field" eq "fire_haines" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "hah\n"; 

                          }elsif("$field" eq "CLD_CVR" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lcvi\n"; 

                          }elsif("$field" eq "cld_cvr" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lcv\n"; 

                          }elsif("$field" eq "SNOW_INC") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "s01i\n"; 

                          }elsif("$field" eq "snow_inc") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "s01\n"; 

                          }elsif("$field" eq "PCP_INC") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "r01i\n"; 

                          }elsif("$field" eq "pcp_inc") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "r01\n"; 

                          }elsif("$field" eq "SNOW_STO") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "stoi\n"; 

                          }elsif("$field" eq "snow_sto") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "sto\n"; 

                          }elsif("$field" eq "PCP_STO") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "rtoi\n"; 

                          }elsif("$field" eq "pcp_sto") { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "rto\n"; 

                          }elsif("$field" eq "PCP_INT") { 
                              printf LAPSPLOT "fai\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$forecast_time\n";
                              printf LAPSPLOT "6.0\n"; 

                          }elsif("$field" eq "pcp_int") { 
                              printf LAPSPLOT "fa\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$forecast_time\n";
                              printf LAPSPLOT "6.0\n"; 

                          }elsif("$field" eq "SAT_11U" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
#                             printf LAPSPLOT "lwoi\n"; 
                              printf LAPSPLOT "s8ai\n"; 

                          }elsif("$field" eq "sat_11u" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
#                             printf LAPSPLOT "lwo\n"; 
                              printf LAPSPLOT "s8a\n"; 

                          }elsif("$field" eq "SAT_VIS_ALB" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "smvi\n"; 

                          }elsif("$field" eq "sat_vis_alb" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "smv\n"; 
      
                          }elsif("$field" eq "le_flux" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lhf\n"; 
      
                          }elsif("$field" eq "LE_FLUX" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lhfi\n"; 
      
                          }elsif("$field" eq "se_flux" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "shf\n"; 
      
                          }elsif("$field" eq "SE_FLUX" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "shfi\n"; 
      
                          }elsif("$field" eq "LONG_WAVE" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "lwoi\n"; 
      
                          }elsif("$field" eq "SW_DOWN" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "swii\n"; 

                          }elsif("$field" eq "SW_OUT" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "swoi\n"; 

                          }elsif("$field" eq "HT" ){ 
#                             printf LAPSPLOT "gg\n"; 
#                             printf LAPSPLOT "tni\n"; 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "teri\n"; 

                          }elsif("$field" eq "ht" ){ 
#                             printf LAPSPLOT "gg\n"; 
#                             printf LAPSPLOT "tn\n"; 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "ter\n"; 

                          }elsif("$field" eq "VISIBILITY" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "visi\n"; 

                          }elsif("$field" eq "visibility" ) { 
                              printf LAPSPLOT "bs\n"; 
                              printf LAPSPLOT "fsf\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "vis\n"; 

                          }elsif("$field" eq "pcp_typ" ) { 
                              printf LAPSPLOT "py\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }else{
                              print "$source $level $field not yet available at the sfc<br>\n"; 
      
                          } # if field

                      }elsif("$level" eq "xsect"){ # fua xsect forecast
                          if   ("$field" eq "temp" ){ 
                              printf LAPSPLOT "t\n";  
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "TEMP" ){ 
                              printf LAPSPLOT "ti\n";  
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "HT" ){ 
                              printf LAPSPLOT "hti\n";  
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "ht" ){ 
                              printf LAPSPLOT "ht\n";  
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "theta" ){ 
                              printf LAPSPLOT "pt\n";  
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "THETA" ){ 
                              printf LAPSPLOT "pti\n";  
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "REFLCT" ){ 
                              printf LAPSPLOT "ri\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "reflct" ){ 
                              printf LAPSPLOT "rf\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind_omega" ) { 
                              printf LAPSPLOT "om\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "WIND_OMEGA" ) { 
                              printf LAPSPLOT "omi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind_div" ) { 
                              printf LAPSPLOT "dv\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "WIND_DIV" ) { 
                              printf LAPSPLOT "dvi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind_vort" ) { 
                              printf LAPSPLOT "vo\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "WIND_VORT" ) { 
                              printf LAPSPLOT "voi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind_pvort" ) { 
                              printf LAPSPLOT "pv\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "WIND_PVORT" ) { 
                              printf LAPSPLOT "pvi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "rh" ){ 
                              printf LAPSPLOT "rl\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "RH" ){ 
                              printf LAPSPLOT "rli\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "rh3" ){ 
                              printf LAPSPLOT "rh\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "RH3" ){ 
                              printf LAPSPLOT "rhi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "sh" ){ 
                              printf LAPSPLOT "sh\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "SH" ){ 
                              printf LAPSPLOT "shi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "dewpoint" ){ 
                              printf LAPSPLOT "td\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "DEWPOINT" ){ 
                              printf LAPSPLOT "tdi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "mr" ){ 
                              printf LAPSPLOT "sh\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "MR" ){ 
                              printf LAPSPLOT "shi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind" ){ 
                              printf LAPSPLOT "vc\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind_u" ){ 
                              printf LAPSPLOT "u\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "WIND_U" ){ 
                              printf LAPSPLOT "ui\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind_v" ){ 
                              printf LAPSPLOT "v\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "WIND_V" ){ 
                              printf LAPSPLOT "vi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "wind_spd" ){ 
                              printf LAPSPLOT "sp\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "WIND_SPD" ){ 
                              printf LAPSPLOT "spi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "cld_liq" ){ 
                              printf LAPSPLOT "ls\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "CLD_LIQ" ){ 
                              printf LAPSPLOT "lsi\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "cld_ice" ){ 
                              printf LAPSPLOT "ci\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "CLD_ICE" ){ 
                              printf LAPSPLOT "cii\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "cld_cnd" ){ 
                              printf LAPSPLOT "cn\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "CLD_CND" ){ 
                              printf LAPSPLOT "cni\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "pcp_rai" ){ 
                              printf LAPSPLOT "rn\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "PCP_RAI" ){ 
                              printf LAPSPLOT "rni\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "pcp_sno" ){ 
                              printf LAPSPLOT "sn\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "PCP_SNO" ){ 
                              printf LAPSPLOT "sni\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "pcp_ice" ){ 
                              printf LAPSPLOT "ic\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }elsif("$field" eq "PCP_ICE" ){ 
                              printf LAPSPLOT "ici\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }else{ 
                              print "$source $level $field not available on the pressure grid\n"; 
                          }
      
                      }elsif("$level" eq "sndg" || "$level" eq "allsky"){ # FUA Sounding
                          if($sounding == 1){
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n"; 
                              printf LAPSPLOT "$hhmm\n";
                          }
      
                      }else{                       # fua hsect level forecast
                          if   ("$field" eq "ht" ) { 
                              printf LAPSPLOT "hr\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
      
                          }elsif("$field" eq "HT" ) { 
                              printf LAPSPLOT "hri\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
      
                          }elsif("$field" eq "temp" ) { 
                              printf LAPSPLOT "tr\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "TEMP" ) { 
                              printf LAPSPLOT "tri\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
      
                          }elsif("$field" eq "rh" ) { 
                              printf LAPSPLOT "fr\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "r\n"; 
                              printf LAPSPLOT "-132.\n"; 
      
                          }elsif("$field" eq "RH" ) { # FUA
                              printf LAPSPLOT "fri\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "r\n"; 
                              printf LAPSPLOT "-132.\n"; 
      
                          }elsif("$field" eq "RH3" ) { # FUA
                              printf LAPSPLOT "fri\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "r\n"; 
                              printf LAPSPLOT "-10.\n"; 

                          }elsif("$field" eq "sh" ) { 
                              printf LAPSPLOT "fr\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 
      
                          }elsif("$field" eq "SH" ) { 
                              printf LAPSPLOT "fri\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 

                          }elsif("$field" eq "mr" ) { 
                              printf LAPSPLOT "fr\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 
      
                          }elsif("$field" eq "MR" ) { 
                              printf LAPSPLOT "fri\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 

                          }elsif("$field" eq "dewpoint" ) { 
                              printf LAPSPLOT "fr\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "d\n"; 
                              printf LAPSPLOT "-132.\n"; 

                          }elsif("$field" eq "DEWPOINT" ) { 
                              printf LAPSPLOT "fri\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "d\n"; 
                              printf LAPSPLOT "-132.\n"; 
      
                          }elsif("$field" eq "pcp_typ" ) { 
                              printf LAPSPLOT "py\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "pcp_cnc" ) { # Precip concentration = rain and snow overlay
                              printf LAPSPLOT "rn\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "sn\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "PCP_RAI" ) { 
                              printf LAPSPLOT "rni\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
      
                          }elsif("$field" eq "pcp_rai" ) { 
                              printf LAPSPLOT "rn\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
      
                          }elsif("$field" eq "PCP_SNO" ) { 
                              printf LAPSPLOT "sni\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
      
                          }elsif("$field" eq "pcp_sno" ) { 
                              printf LAPSPLOT "sn\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "PCP_ICE" ) { 
                              printf LAPSPLOT "pii\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "pcp_ice" ) { 
                              printf LAPSPLOT "pi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "f\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "wind" ) {                               printf LAPSPLOT "wr\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "vc\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";
      
                          }elsif("$field" eq "WIND_SPD" ) { 
                              printf LAPSPLOT "wri\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "sp\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "wind_spd" ) { 
                              printf LAPSPLOT "wr\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "sp\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "wind_u") { 
                              printf LAPSPLOT "wr\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "u\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "wind_v") { 
                              printf LAPSPLOT "wr\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "v\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "WIND_U") { 
                              printf LAPSPLOT "wri\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "u\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                          }elsif("$field" eq "WIND_V") { 
                              printf LAPSPLOT "wri\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "v\n"; 
                              printf LAPSPLOT "$source\n";
                              printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_div" ) { 
                        printf LAPSPLOT "wr\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_DIV" ) { 
                        printf LAPSPLOT "wri\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_vort" ) { 
                        printf LAPSPLOT "wr\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vo\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_VORT" ) { 
                        printf LAPSPLOT "wri\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vo\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_pvort" ) { 
                        printf LAPSPLOT "wr\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "pv\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_PVORT" ) { 
                        printf LAPSPLOT "wri\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "pv\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "vort_adv" ) { 
                        printf LAPSPLOT "wr\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "va\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_omega" ) { 
                        printf LAPSPLOT "fo\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_OMEGA" ) { 
                        printf LAPSPLOT "foi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "cld_liq" ) { 
                        printf LAPSPLOT "ls\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "CLD_LIQ" ) { 
                        printf LAPSPLOT "lsi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "cld_ice" ) { 
                        printf LAPSPLOT "ci\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "CLD_ICE" ) { 
                        printf LAPSPLOT "cii\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "cld_cnd" ) { 
                        printf LAPSPLOT "cn\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "CLD_CND" ) { 
                        printf LAPSPLOT "cni\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "reflct" ) { 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "REFLCT" ) { 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "rfi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "f\n"; 
                        printf LAPSPLOT "$source\n";
                        printf LAPSPLOT "$hhmm\n";

		    }else{
                        print "$source $level mb $field not available on the pressure grid<br>\n"; 

	            } # if field

                } # if level
           
            }elsif("$source" =~ "bkgnd"){          # lga/lgb
                if("$level" eq "sfc/2d"){          # lgb          
                    if   ("$field" eq "p_msl" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "slp\n"; 

                    }elsif("$field" eq "P_MSL" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "slpi\n"; 

                    }elsif("$field" eq "p_red" ) { 
                         printf LAPSPLOT "bs\n"; 
                         printf LAPSPLOT "lgb\n"; 
                         printf LAPSPLOT "$hhmm\n";
                         printf LAPSPLOT "p\n"; 

                    }elsif("$field" eq "P_RED" ) { 
                         printf LAPSPLOT "bs\n"; 
                         printf LAPSPLOT "lgb\n"; 
                         printf LAPSPLOT "$hhmm\n";
                         printf LAPSPLOT "pi\n"; 

                    }elsif("$field" eq "TEMP" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "tsfi\n"; 
                        if($units eq "english"){
                            printf LAPSPLOT "f\n"; 
                        }else{
                            printf LAPSPLOT "c\n"; 
                        }

                    }elsif("$field" eq "temp" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "tsf\n"; 
                        if($units eq "english"){
                            printf LAPSPLOT "f\n"; 
                        }else{
                            printf LAPSPLOT "c\n"; 
                        }

                    }elsif("$field" eq "DEWPOINT" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "dsfi\n"; 
                        if($units eq "english"){
                            printf LAPSPLOT "f\n"; 
                        }else{
                            printf LAPSPLOT "c\n"; 
                        }

                    }elsif("$field" eq "dewpoint" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "dsf\n"; 
                        if($units eq "english"){
                            printf LAPSPLOT "f\n"; 
                        }else{
                            printf LAPSPLOT "c\n"; 
                        }

                    }elsif("$field" eq "SH" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "rsfi\n"; 

                    }elsif("$field" eq "sh" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "rsf\n"; 

                    }elsif("$field" eq "SFCT" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "tgdi\n"; 
                        if($units eq "english"){
                            printf LAPSPLOT "f\n"; 
                        }else{
                            printf LAPSPLOT "c\n"; 
                        }
      
                    }elsif("$field" eq "sfct" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "tgd\n"; 
                        if($units eq "english"){
                            printf LAPSPLOT "f\n"; 
                        }else{
                            printf LAPSPLOT "c\n"; 
                        }

                    }elsif("$field" eq "wind" ) { # lgb / lwm
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "vc\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "vc\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_SPD" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "sp\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_spd" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "sp\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_div" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_DIV" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_u" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "usf\n"; 

                    }elsif("$field" eq "WIND_U" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "usfi\n"; 

                    }elsif("$field" eq "wind_v" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "vsf\n"; 

                    }elsif("$field" eq "WIND_V" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "vsfi\n"; 

                    }elsif("$field" eq "stn_p" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "psf\n"; 

                    }elsif("$field" eq "P_STN" ) { 
                        printf LAPSPLOT "bs\n"; 
                        printf LAPSPLOT "lgb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "psfi\n"; 

                    }elsif("$field" eq "SAT_VIS_ALB" ) { 
                        printf LAPSPLOT "gg\n"; 
                        printf LAPSPLOT "ali\n"; 

                    }elsif("$field" eq "vis_alb" ) { 
                        printf LAPSPLOT "gg\n"; 
                        printf LAPSPLOT "al\n"; 

		    }else{
                        print "$source $level $field not available (via the lgb file)<br>\n"; 

	            } # if field

                }elsif("$level" eq "xsect"){ # lga xsect background
                    if   ("$field" eq "wind" ){ 
                        printf LAPSPLOT "vc\n";  
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "WIND_SPD" ){ 
                        printf LAPSPLOT "spi\n";  
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "wind_spd" ){ 
                        printf LAPSPLOT "sp\n";  
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "WIND_OMEGA" ) { 
                        printf LAPSPLOT "omi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "wind_omega" ) { 
                        printf LAPSPLOT "om\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "wind_div" ) { 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "WIND_DIV" ) { 
                        printf LAPSPLOT "dvi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "wind_vort" ) { 
                        printf LAPSPLOT "vo\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "WIND_VORT" ) { 
                        printf LAPSPLOT "voi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "wind_pvort" ) { 
                        printf LAPSPLOT "pv\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "WIND_PVORT" ) { 
                        printf LAPSPLOT "pvi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "vort_adv" ) { 
                        printf LAPSPLOT "va\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "rh" ) { 
                        printf LAPSPLOT "rl\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "RH" ) { 
                        printf LAPSPLOT "rli\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "rh3" ) { 
                        printf LAPSPLOT "rh\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "RH3" ) { 
                        printf LAPSPLOT "rhi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "sh" ) { 
                        printf LAPSPLOT "sh\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "SH" ) { 
                        printf LAPSPLOT "shi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "mr" ) { 
                        printf LAPSPLOT "sh\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "MR" ) { 
                        printf LAPSPLOT "shi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "CLD_CVR" ) { 
                        printf LAPSPLOT "rhi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "temp" ) { 
                        printf LAPSPLOT "t\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "TEMP" ) { 
                        printf LAPSPLOT "ti\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "ht" ) { 
                        printf LAPSPLOT "ht\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "HT" ) { 
                        printf LAPSPLOT "hti\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "theta" ) { 
                        printf LAPSPLOT "pt\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "THETA" ) { 
                        printf LAPSPLOT "pti\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "wind_u" ) { 
                        printf LAPSPLOT "u\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "WIND_U" ) { 
                        printf LAPSPLOT "ui\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "wind_v" ) { 
                        printf LAPSPLOT "v\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }elsif("$field" eq "WIND_V" ) { 
                        printf LAPSPLOT "vi\n"; 
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }else{ 
                        print "$source $level $field not available (via lga file)\n"; 
                    }

                }elsif("$level" eq "sndg" || "$level" eq "allsky"){ # lga Sounding
                    if($sounding == 1){
                        printf LAPSPLOT "b\n"; 
                        printf LAPSPLOT "$hhmm\n";
                    }

                }else{                       # Background lga - 3D levels
                    if   ("$field" eq "ht" ) { 
                        printf LAPSPLOT "hb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "HT" ) { 
                        printf LAPSPLOT "hbi\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "temp" ) { 
                        printf LAPSPLOT "tb\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "TEMP" ) { 
                        printf LAPSPLOT "tbi\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "rh" ) { 
                        printf LAPSPLOT "br\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "-132.\n"; 

                    }elsif("$field" eq "RH" ) { 
                        printf LAPSPLOT "bri\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "-132.\n"; 

                    }elsif("$field" eq "rh3" ) { 
                        printf LAPSPLOT "br\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "-10.\n"; 

                    }elsif("$field" eq "RH3" ) { 
                        printf LAPSPLOT "bri\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "-10.\n"; 

                    }elsif("$field" eq "CLD_CVR" ) { 
                        printf LAPSPLOT "bri\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "-132.\n"; 

                    }elsif("$field" eq "dewpoint" ) { 
                        printf LAPSPLOT "br\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "d\n"; 
                        printf LAPSPLOT "-132.\n"; 

                    }elsif("$field" eq "DEWPOINT" ) { 
                        printf LAPSPLOT "bri\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "d\n"; 
                        printf LAPSPLOT "-132.\n"; 

                    }elsif("$field" eq "sh" ) { 
                        printf LAPSPLOT "br\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 

                    }elsif("$field" eq "SH" ) { 
                        printf LAPSPLOT "bri\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 

                    }elsif("$field" eq "mr" ) { 
                        printf LAPSPLOT "br\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 

                    }elsif("$field" eq "MR" ) { 
                        printf LAPSPLOT "bri\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 

                    }elsif("$field" eq "wind" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vc\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_SPD" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "sp\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_spd" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "sp\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_div" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_DIV" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_vort" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vo\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_VORT" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vo\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_pvort" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "pv\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_PVORT" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "pv\n"; 
                        printf LAPSPLOT "$hhmm\n";
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "vort_adv" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "va\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_U" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "u\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_u" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "u\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_V" ) { 
                        printf LAPSPLOT "wbi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "v\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_v" ) { 
                        printf LAPSPLOT "wb\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "v\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "wind_omega" ) { 
                        printf LAPSPLOT "lo\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "WIND_OMEGA" ) { 
                        printf LAPSPLOT "loi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "$hhmm\n";

		    }else{
                        print "$source $level mb $field not available (via lga file)<br>\n"; 

	            } # if field

                } # if level
           
            }elsif("$source" eq "obs"){
#           }elsif( ("$source" eq "obs" || $n_sources_obs > 0) && $field eq $fields[$n_fields-1]){
#           }elsif("$source" eq "obs" && $field eq $fields[$n_fields-1]){
                if("$level" eq "sfc/2d"){                                         # Sfc Obs
                    print "field, obs_sfc = $field $obs_sfc \n";

                    if($obs_sfc eq "none" || $field eq "SFCT" || $field eq "sfct" || $field eq "stn_p" || $field eq "alt_p" 
                    || $field eq "p_prime"  || $field eq "P_PRIME"  
                    || $field eq "red_p" || $field eq "ref_max" 
                    || $field eq "REF_MAX" 
                    || $field eq "snow_cvr" || $field eq "SNOW_CVR" 
                    || $field eq "snow_depth" || $field eq "SNOW_DEPTH" 
                    || $field eq "cld_cvr" || $field eq "CLD_CVR" 
                    || $field eq "cld_base" || $field eq "CLD_BASE" 
#                   || $field eq "sat_11u" || $field eq "SAT_11U" 
                    || $field eq "sw_down" || $field eq "SW_DOWN" 
#                   || $field eq "umflux" || $field eq "UMFLUX" 
#                   || $nmontage > 0
                                                                           ){     # Overlay always for these (even when obs_sfc != none)

                        if("$field" eq "visibility" || "$field" eq "VISIBILITY") { 
                            printf LAPSPLOT "ov\n"; 
                            printf LAPSPLOT " \n"; 
                            $obs_sfc = "visibility";    # This is set to prevent station model overlays

                        }elsif("$field" =~ "pcp_inc" || "$field" =~ "PCP_INC") { 
                            if($model_fcst_intvl == 10800 && $fcst == 1){
                                printf LAPSPLOT "op3\n"; 
                            }else{
                                printf LAPSPLOT "op\n"; 
                            }
                            printf LAPSPLOT " \n"; 
                            $obs_sfc = "pcp_inc";   # This is set to prevent station model overlays

                        }elsif("$field" =~ "pcp_sto" || "$field" =~ "PCP_STO") { 
                            if($i4time_fcst >= 86400){
                                printf LAPSPLOT "op24\n"; 
                            }elsif($i4time_fcst >= 21600){
                                printf LAPSPLOT "op6\n"; 
                            }elsif($i4time_fcst >= 10800){
                                printf LAPSPLOT "op3\n"; 
                            }else{
                                printf LAPSPLOT "op1\n"; 
                            }
                            printf LAPSPLOT " \n"; 
                            $obs_sfc = "pcp_inc";   # This is set to prevent station model overlays

                        }elsif("$field" =~ "umflux" || "$field" =~ "UMFLUX") { 
                            printf LAPSPLOT "op\n"; 
                            printf LAPSPLOT " \n"; 
                            $obs_sfc = "pcp_inc";   # This is set to prevent station model overlays

                        }elsif("$field" eq "snow_sto" ) { 
                            printf LAPSPLOT "op\n"; 
                            printf LAPSPLOT " \n"; 
                            $obs_sfc = "snow_sto";   # This is set to prevent station model overlays

                        }elsif("$field" eq "CLD_CVR") { 
                            printf LAPSPLOT "ov\n";    # Option for C&V obs
                            printf LAPSPLOT "or\n";    # Option for solar radiation obs
                            printf LAPSPLOT " \n"; 
#                           if($montage == 0){
                                $obs_sfc = "visibility";   # This is set to prevent station model overlays
#                           }

                        }elsif("$field" eq "CLD_BASE") { 
                            printf LAPSPLOT "ov\n";    # Optional C&V obs
                            printf LAPSPLOT " \n"; 
#                           if($montage == 0){
                                $obs_sfc = "visibility";   # This is set to prevent station model overlays
#                           }

                        }elsif("$field" eq "cld_cvr" ) { 
                            printf LAPSPLOT "ov\n"; 
                            printf LAPSPLOT " \n"; 
                            $obs_sfc = "visibility";   # This is set to prevent station model overlays

                        }elsif("$field" =~ "SAT_D39" ) { 
                            printf LAPSPLOT "ov\n"; 
                            printf LAPSPLOT " \n"; 
                            $obs_sfc = "visibility";   # This is set to prevent station model overlays

#                       }elsif("$field" =~ "SAT_" ) { 
#                           printf LAPSPLOT "ov\n"; 
#                           printf LAPSPLOT " \n"; 
#                           $obs_sfc = "visibility";   # This is set to prevent station model overlays

#                       }elsif("$field" =~ "sat_" ) { 
#                           printf LAPSPLOT "ov\n"; 
#                           printf LAPSPLOT " \n"; 
#                           $obs_sfc = "visibility";   # This is set to prevent station model overlays

                        }elsif("$field" eq "wind_u" || "$field" eq "WIND_U") { 
                            printf LAPSPLOT "ow\n"; 
                            printf LAPSPLOT " \n"; 

                        }elsif("$field" eq "wind_v" || "$field" eq "WIND_V") { 
                            printf LAPSPLOT "ow\n"; 
                            printf LAPSPLOT " \n"; 

                        }elsif("$field" =~ "wind" || "$field" =~ "WIND") { 
                            printf LAPSPLOT "ow\n"; 
                            printf LAPSPLOT " \n"; 

                        }elsif("$field" eq "sat_vis_alb"){ 
                            printf LAPSPLOT "lv\n"; 
                            printf LAPSPLOT "$hhmm\n"; 
                            printf LAPSPLOT "1\n"; 
                            printf LAPSPLOT "ALB\n";

                        }elsif("$field" eq "SAT_VIS_ALB"){ 

                           if("$hhmm" =~ "goes" || "$hhmm" =~ "mtsat" || "$hhmm" =~ "meteos") { 
                               printf LAPSPLOT "lv\n"; 
                               printf LAPSPLOT "$hhmm\n"; 
                               printf LAPSPLOT "-1\n"; 
                               printf LAPSPLOT "ALB\n";
                           }else{
                               printf LAPSPLOT "og\n"; 
                               printf LAPSPLOT "ov\n"; 
                               printf LAPSPLOT " \n"; 
                           }

                        }elsif("$field" eq "SAT_VIS"){ 
                            printf LAPSPLOT "lv\n"; 
                            printf LAPSPLOT "$hhmm\n"; 
                            printf LAPSPLOT "-1\n"; 
                            printf LAPSPLOT "SVS\n";

                        }elsif("$field" eq "SAT_VIS_NRM"){ 
                            printf LAPSPLOT "lv\n"; 
                            printf LAPSPLOT "$hhmm\n"; 
                            printf LAPSPLOT "-1\n"; 
                            printf LAPSPLOT "SVN\n";

                       }elsif("$field" eq "sat_11u" ) { 
                           printf LAPSPLOT "lv\n"; 
                           printf LAPSPLOT "$hhmm\n"; 
                           printf LAPSPLOT "4\n"; 
                           printf LAPSPLOT "S8A\n"; 
                           $obs_sfc = "visibility";   # This is set to prevent station model overlays

                       }elsif("$field" eq "SAT_11U" ) { 
                           if("$hhmm" =~ "goes" || "$hhmm" =~ "mtsat" || "$hhmm" =~ "meteos") { 
                               printf LAPSPLOT "lv\n"; 
                               printf LAPSPLOT "$hhmm\n"; 
                               printf LAPSPLOT "-4\n"; 
                               printf LAPSPLOT "S8A\n";
                           }else{
#                              $obs_sfc = "visibility";   # This is set to prevent station model overlays
                               printf LAPSPLOT "og\n"; 
                               printf LAPSPLOT "ov\n"; 
                               printf LAPSPLOT " \n"; 
                           }

                       }elsif("$field" eq "sat_12u" ) { 
                           printf LAPSPLOT "lv\n"; 
                           printf LAPSPLOT "$hhmm\n"; 
                           printf LAPSPLOT "5\n"; 
                           printf LAPSPLOT "S8A\n"; 
                           $obs_sfc = "visibility";   # This is set to prevent station model overlays

                       }elsif("$field" eq "SAT_12U" ) { 
                           printf LAPSPLOT "lv\n"; 
                           printf LAPSPLOT "$hhmm\n"; 
                           printf LAPSPLOT "-5\n"; 
                           printf LAPSPLOT "S8A\n"; 
#                          $obs_sfc = "visibility";   # This is set to prevent station model overlays

                       }elsif("$field" eq "sat_wv" ) { 
                           printf LAPSPLOT "lv\n"; 
                           printf LAPSPLOT "$hhmm\n"; 
                           printf LAPSPLOT "3\n"; 
                           printf LAPSPLOT "S4A\n"; 
                           $obs_sfc = "visibility";   # This is set to prevent station model overlays

                       }elsif("$field" eq "SAT_WV" ) { 
                           printf LAPSPLOT "lv\n"; 
                           printf LAPSPLOT "$hhmm\n"; 
                           printf LAPSPLOT "-3\n"; 
                           printf LAPSPLOT "S4A\n"; 
#                          $obs_sfc = "visibility";   # This is set to prevent station model overlays

                        }elsif("$field" eq "sat_39u" ) { 
                            printf LAPSPLOT "lv\n"; 
                            printf LAPSPLOT "$hhmm\n"; 
                            printf LAPSPLOT "2\n"; 
                            printf LAPSPLOT "S3A\n"; 
                            $obs_sfc = "visibility";   # This is set to prevent station model overlays

                        }elsif("$field" eq "SAT_39U" ) { 
                            printf LAPSPLOT "lv\n"; 
                            printf LAPSPLOT "$hhmm\n"; 
                            printf LAPSPLOT "-2\n"; 
                            printf LAPSPLOT "S3A\n"; 
                            $obs_sfc = "visibility";   # This is set to prevent station model overlays

                        }elsif("$field" eq "ref_max" ) { 
                            printf LAPSPLOT "ra\n"; 
                            printf LAPSPLOT "mr\n"; 
                            printf LAPSPLOT " \n"; 
#                           $obs_sfc = "ref_max";

                        }elsif("$field" eq "REF_MAX" ) { 
                            printf LAPSPLOT "ra\n"; 
                            printf LAPSPLOT "mri\n"; 
                            printf LAPSPLOT " \n"; 
#                           $obs_sfc = "REF_MAX";

                        }elsif("$field" eq "reflct" ) { 
                            printf LAPSPLOT "ra\n"; 
                            printf LAPSPLOT "lr\n"; 
                            printf LAPSPLOT " \n"; 
#                           $obs_sfc = "ref_max";

                        }elsif("$field" eq "REFLCT" ) { 
                            printf LAPSPLOT "ra\n"; 
                            printf LAPSPLOT "lri\n"; 
                            printf LAPSPLOT " \n"; 
#                           $obs_sfc = "REF_MAX";

                        }elsif("$field" eq "SNOW_CVR"){
                            printf LAPSPLOT "csci\n";
#                           printf LAPSPLOT " \n"; 

                        }elsif("$field" eq "snow_cvr"){ 
                            printf LAPSPLOT "csc\n"; 
#                           printf LAPSPLOT " \n"; 

                        }elsif("$field" eq "sfct" || "$field" eq "SFCT"){ 
                            printf LAPSPLOT "og\n"; 
                            printf LAPSPLOT " \n"; 

                        }elsif("$field" eq "SW_DOWN" || "$field" eq "sw_down"){ 
                            printf LAPSPLOT "or\n"; 
                            printf LAPSPLOT " \n"; 

                        }elsif("$field" eq "prcp_h2o" || "$field" eq "PRCP_H2O"){ 
                            printf LAPSPLOT "wv\n"; 
#                           $obs_sfc = "prcp_h20";
#                           print "<h2>print wv, source = $source</h2>";

                        }elsif("$field" eq "cld_liq" || "$field" eq "CLD_LIQ"){ 
                            printf LAPSPLOT "il\n"; 

                        }elsif("$field" eq "locations"){ 
                            printf LAPSPLOT "st\n"; 

                        }elsif($units eq "english"){
                            printf LAPSPLOT "of\n"; 
                            if("$field" eq "stn_p" ) { 
                                printf LAPSPLOT "stn\n"; 
                            }elsif("$field" eq "p_red"){
                                printf LAPSPLOT "alt\n"; 
                            }else{
                                printf LAPSPLOT "msl\n"; 
                                $obs_sfc = "p_msl";
                            }
                        }else{ # metric units
                            printf LAPSPLOT "oc\n"; 
                            if("$field" eq "stn_p" ) { 
                                printf LAPSPLOT "stn\n"; 
                            }elsif("$field" eq "p_red"){
                                printf LAPSPLOT "alt\n"; 
                            }else{
                                printf LAPSPLOT "msl\n"; 
                                $obs_sfc = "p_msl";
                            }
                        }
                    } # $obs_sfc 

                }elsif("$level" eq "xsect"){                                                           # Xsect Obs (radar)
                    if("$field" eq "REFLCT" ) { 
                        printf LAPSPLOT "rv\n"; 
                        if("$hhmm" =~ "v"){
                            printf LAPSPLOT "$hhmm\n"; 
		        }else{
                            printf LAPSPLOT "vrz\n"; 
		        }
                    }

                }elsif("$level" eq "sndg"){                                                            # Sounding Obs 

                }else{                                                                                 # Obs Aloft
                    if(("$field" eq "temp" || "$field" eq "TEMP") && $lvl_access == 2) { 
                        printf LAPSPLOT "to\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "y\n"; 

                    }elsif("$field" eq "dewpoint" || "$field" eq "DEWPOINT") { 
                        printf LAPSPLOT "ho\n"; 
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "sh" || "$field" eq "SH") { 
                        printf LAPSPLOT "qo\n"; 
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "mr" || "$field" eq "MR") { 
                        printf LAPSPLOT "qo\n"; 
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "wind" && $lvl_access == 2) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "ob\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "y\n"; 

                    }elsif(("$field" eq "wind_u" || "$field" eq "WIND_U") && $lvl_access == 2) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "ob\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "y\n"; 

                    }elsif(("$field" eq "wind_v" || "$field" eq "WIND_V") && $lvl_access == 2) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "ob\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "y\n"; 

                    }elsif(("$field" eq "wind_spd" || "$field" eq "WIND_SPD") && $lvl_access == 2) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "ob\n"; 
                        printf LAPSPLOT "0\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "y\n"; 

                    }elsif("$field" eq "reflct" ) { 
                        printf LAPSPLOT "rv\n"; 
                        if("$hhmm" =~ "v"){
                            printf LAPSPLOT "$hhmm\n"; 
		        }else{
                            printf LAPSPLOT "v01\n"; 
		        }
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "REFLCT" ) { 
                        printf LAPSPLOT "rv\n"; 
                        if("$hhmm" =~ "v"){
                            printf LAPSPLOT "$hhmm\n"; 
		        }else{
                            printf LAPSPLOT "v01\n"; 
		        }
                        printf LAPSPLOT "rfi\n"; 
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "radial_vel" ) { # obs for 1 or more radars 
                        printf LAPSPLOT "rd\n"; 
                        printf LAPSPLOT "vi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "$hhmm\n"; 

		    }else{
                        print "$source $level mb $field not available $lvl_access<br>\n"; 

	            } # if field

                } # if level
           
            }elsif("$source" eq "obs_qc"){
                if("$level" eq "sfc/2d"){
                    if($obs_sfc_qc == 0){
                        if("$field" eq "sfct" || "$field" eq "SFCT"){
                            printf LAPSPLOT "qg\n"; 
                            printf LAPSPLOT " \n"; 

                        }elsif($units eq "english"){ 
                            printf LAPSPLOT "qf\n"; 
                            if("$field" eq "stn_p" ) { 
                                printf LAPSPLOT "stn\n"; 
                            }else{
                                printf LAPSPLOT "msl\n"; 
                            }
                        }else{
                            printf LAPSPLOT "qc\n"; 
                            if("$field" eq "stn_p" ) { 
                                printf LAPSPLOT "stn\n"; 
                            }else{
                                printf LAPSPLOT "msl\n"; 
                            }
                        }
                        $obs_sfc_qc = 1;
                    }

                }else{                                                                                 # QC'd Obs Aloft
                    if("$field" eq "temp" ) { 
                        print "$source $level mb $field not available<br>\n"; 

                    }elsif("$field" eq "wind" ) { 
                        print "$source $level mb $field not available<br>\n"; 

                    }elsif("$field" eq "reflct" ) { 
                        printf LAPSPLOT "rv\n"; 
                        printf LAPSPLOT "vrz\n"; 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "$level\n"; 

                    }elsif("$field" eq "REFLCT" ) { 
                        printf LAPSPLOT "rv\n"; 
                        printf LAPSPLOT "vrz\n"; 
                        printf LAPSPLOT "rfi\n"; 
                        printf LAPSPLOT "$level\n"; 

		    }else{
                        print "$source $level mb $field not available<br>\n"; 

	            } # if field

                } # if level
           
            }elsif("$source" eq "analysis"){

                if("$level" eq "sfc/2d"){            # Surface analyses
                    if("$field" eq "CLD_CVR"){ 
                        printf LAPSPLOT "cg\n";  
                        printf LAPSPLOT "0\n"; 

#                   }elsif("$field" eq "SW_DOWN" ){ 
#                       printf LAPSPLOT "cg\n";  
#                       printf LAPSPLOT "0\n"; 

                    }elsif("$field" eq "CLD_TOP" ){ 
                        printf LAPSPLOT "cti\n"; 

                    }elsif("$field" eq "cld_top" ){ 
                        printf LAPSPLOT "ct\n"; 

                    }elsif("$field" eq "CLD_BASE" ){ 
                        printf LAPSPLOT "cbi\n"; 

                    }elsif("$field" eq "cld_base" ){ 
                        printf LAPSPLOT "cb\n"; 

                    }elsif("$field" eq "CLD_CEIL" ){ 
                        printf LAPSPLOT "cci\n"; 

                    }elsif("$field" eq "cld_ceil" ){ 
                        printf LAPSPLOT "cc\n"; 

                    }elsif("$field" eq "cld_type" ){ 
                        printf LAPSPLOT "cy\n"; 
                        printf LAPSPLOT "0\n"; 

                    }elsif("$field" eq "HT" ){ 
                        printf LAPSPLOT "gg\n"; 
                        printf LAPSPLOT "tni\n"; 

                    }elsif("$field" eq "ht" ){ 
                        printf LAPSPLOT "gg\n"; 
                        printf LAPSPLOT "tn\n"; 

#                   }elsif("$field" eq "GG" ){ 
#                       printf LAPSPLOT "gg\n"; 
#                       $string_lapsplot="$hhmm"."i";
#                       printf LAPSPLOT "$string_lapsplot\n";

                    }elsif("$field" eq "GG" ){ 
                        printf LAPSPLOT "ggi\n"; 
                        $string_lapsplot="$hhmm";
                        printf LAPSPLOT "$string_lapsplot\n";

                    }elsif("$field" eq "gg" ){ 
                        printf LAPSPLOT "gg\n"; 
                        printf LAPSPLOT "$hhmm\n";

                    }elsif("$field" eq "sfct"){     # LSX 
                        if($units eq "metric"){
                            printf LAPSPLOT "gc\n"; 
                        }else{
                            printf LAPSPLOT "gf\n"; 
                        }

                    }elsif("$field" eq "SFCT"){     # LSX 
                        if($units eq "metric"){
                            printf LAPSPLOT "gci\n"; 
                        }else{
                            printf LAPSPLOT "gfi\n"; 
                        }

                    }elsif("$field" eq "temp"){     # LSX
                        if($units eq "metric"){
                            printf LAPSPLOT "tc\n"; 
                        }else{
                            printf LAPSPLOT "tf\n"; 
                        }

                    }elsif("$field" eq "TEMP"){     # LSX
                        if($units eq "metric"){
                            printf LAPSPLOT "tci\n"; 
                        }else{
                            printf LAPSPLOT "tfi\n"; 
                        }

                    }elsif("$field" eq "dewpoint"){ 
                        if($units eq "metric"){
                            printf LAPSPLOT "dc\n"; 
                        }else{
                            printf LAPSPLOT "df\n"; 
                        }

                    }elsif("$field" eq "DEWPOINT"){ 
                        if($units eq "metric"){
                            printf LAPSPLOT "dci\n"; 
                        }else{
                            printf LAPSPLOT "dfi\n"; 
                        }
                    }
                    elsif("$field" eq "RH"){ 
                        printf LAPSPLOT "hui\n"; }
                    elsif("$field" eq "rh"){ 
                        printf LAPSPLOT "hu\n"; }
                    elsif("$field" eq "SH"){ 
                        printf LAPSPLOT "mri\n"; }
                    elsif("$field" eq "sh"){ 
                        printf LAPSPLOT "mr\n"; }
                    elsif("$field" eq "MR"){ 
                        printf LAPSPLOT "mri\n"; }
                    elsif("$field" eq "mr"){ 
                        printf LAPSPLOT "mr\n"; }
                    elsif("$field" eq "wind")
                        { printf LAPSPLOT "ws\n"; }
                    elsif("$field" eq "WIND_U")
                        { printf LAPSPLOT "ui\n"; }
                    elsif("$field" eq "wind_u")
                        { printf LAPSPLOT "u\n"; }
                    elsif("$field" eq "WIND_V")
                        { printf LAPSPLOT "vi\n"; }
                    elsif("$field" eq "wind_v")
                        { printf LAPSPLOT "v\n"; }
                    elsif("$field" eq "WIND_SPD")
                        { printf LAPSPLOT "spi\n"; }
                    elsif("$field" eq "wind_spd")
                        { printf LAPSPLOT "sp\n"; }
                    elsif("$field" eq "wind_spd_0-6"){ 
                        printf LAPSPLOT "s6\n"}   
                    elsif("$field" eq "WIND_PWR")
                        { printf LAPSPLOT "sp3i\n"; }
                    elsif("$field" eq "WIND_DIV")
                        { printf LAPSPLOT "dvi\n"; }
                    elsif("$field" eq "wind_div")
                        { printf LAPSPLOT "dv\n"; }
                    elsif("$field" eq "MCONV")
                        { printf LAPSPLOT "mci\n"; }
                    elsif("$field" eq "mconv")
                        { printf LAPSPLOT "mc\n"; }
                    elsif("$field" eq "WIND_VORT")
                        { printf LAPSPLOT "voi\n"; }
                    elsif("$field" eq "wind_vort")
                        { printf LAPSPLOT "vo\n"; }
                    elsif("$field" eq "P_MSL") 
                        { printf LAPSPLOT "pmi\n"; }
                    elsif("$field" eq "p_msl") 
                        { printf LAPSPLOT "pm\n"; }
                    elsif("$field" eq "P_RED") 
                        { printf LAPSPLOT "pi\n"; }
                    elsif("$field" eq "p_red") 
                        { printf LAPSPLOT "p\n"; }
                    elsif("$field" eq "P_STN") 
                        { printf LAPSPLOT "psi\n"; }
                    elsif("$field" eq "stn_p") 
                        { printf LAPSPLOT "ps\n"; }
                    elsif("$field" eq "alt_p") 
                        { printf LAPSPLOT "al\n"; }
                    elsif("$field" eq "p_prime") 
                        { printf LAPSPLOT "pp\n"; }
                    elsif("$field" eq "P_PRIME") 
                        { printf LAPSPLOT "ppi\n"; }
                    elsif("$field" eq "THETA") 
                        { printf LAPSPLOT "thi\n"; }
                    elsif("$field" eq "theta") 
                        { printf LAPSPLOT "th\n"; }
                    elsif("$field" eq "THETAE") 
                        { printf LAPSPLOT "tei\n"; }
                    elsif("$field" eq "thetae") 
                        { printf LAPSPLOT "te\n"; }
                    elsif("$field" eq "CAPE") 
                        { printf LAPSPLOT "pei\n"; }
                    elsif("$field" eq "cape") 
                        { printf LAPSPLOT "pe\n"; }
                    elsif("$field" eq "CIN") 
                        { printf LAPSPLOT "nei\n"; }
                    elsif("$field" eq "cin") 
                        { printf LAPSPLOT "ne\n"; }
                    elsif("$field" eq "HELICITY") 
                        { printf LAPSPLOT "hei\n"; }
                    elsif("$field" eq "helicity") 
                        { printf LAPSPLOT "he\n"; }
                    elsif("$field" eq "UMFLUX") 
                        { printf LAPSPLOT "umi\n"; }
                    elsif("$field" eq "umflux") 
                        { printf LAPSPLOT "um\n"; }
                    elsif("$field" eq "WTBLB0") 
                        { printf LAPSPLOT "si\n"; 
                          printf LAPSPLOT "wb0\n"; }
                    elsif("$field" eq "wtblb0") 
                        { printf LAPSPLOT "s\n"; 
                          printf LAPSPLOT "wb0\n"; }
#                   elsif("$field" eq "WTBLB1") 
#                       { printf LAPSPLOT "si\n"; 
#                         printf LAPSPLOT "wb1\n"; }
#                   elsif("$field" eq "wtblb1") 
#                       { printf LAPSPLOT "s\n"; 
#                         printf LAPSPLOT "wb1\n"; }
                    elsif("$field" eq "VISIBILITY") 
                        { printf LAPSPLOT "vsi\n"; }
                    elsif("$field" eq "visibility") 
                        { printf LAPSPLOT "vs\n"; }
                    elsif("$field" eq "HEATINDEX") 
                        { printf LAPSPLOT "hii\n"; }
                    elsif("$field" eq "heatindex") 
                        { printf LAPSPLOT "hi\n"; }
                    elsif("$field" eq "FIRE_FBG"){ 
                        printf LAPSPLOT "lfi\n"; 
                        printf LAPSPLOT "fwi\n";}
                    elsif("$field" eq "fire_fbg"){ 
                        printf LAPSPLOT "lf\n"; 
                        printf LAPSPLOT "fwi\n";}
                    elsif("$field" eq "FIREWX"){ 
                        printf LAPSPLOT "fwi\n";}
                    elsif("$field" eq "firewx"){ 
                        printf LAPSPLOT "fw\n";}
                    elsif("$field" eq "VENT_INDX"){ 
                        printf LAPSPLOT "lfi\n"; 
                        printf LAPSPLOT "vnt\n";}
                    elsif("$field" eq "vent_indx"){ 
                        printf LAPSPLOT "lf\n"; 
                        printf LAPSPLOT "vnt\n";}
                    elsif("$field" eq "HAINES"){ 
                        printf LAPSPLOT "lfi\n"; 
                        printf LAPSPLOT "hah\n";}
                    elsif("$field" eq "haines"){ 
                        printf LAPSPLOT "lf\n"; 
                        printf LAPSPLOT "hah\n";}
                    elsif("$field" eq "vis_alb"){ 
                        printf LAPSPLOT "lc\n"; 
                        printf LAPSPLOT "alb\n";} 
                    elsif("$field" eq "SAT_VIS_ALB"){ 
                        printf LAPSPLOT "lci\n"; 
                        printf LAPSPLOT "alb\n";} 
                    elsif("$field" eq "CLD_ALB1"){ 
                        printf LAPSPLOT "lci\n";   # LCV
#                       printf LAPSPLOT "a\n"; 
                        printf LAPSPLOT "cla\n";} 
                    elsif("$field" eq "CLD_ALB"){ 
                        printf LAPSPLOT "cai\n";   # LIL 
                        printf LAPSPLOT "a\n"; 
                        printf LAPSPLOT "cla\n";} 
                    elsif("$field" eq "LONG_WAVE"){ 
                        printf LAPSPLOT "lci\n"; 
                        printf LAPSPLOT "s8a\n";} 
                    elsif("$field" eq "SW_DOWN"){  # LCV
                        printf LAPSPLOT "lci\n"; 
                        printf LAPSPLOT "swi\n";} 
                    elsif("$field" eq "sw_down"){           
                        printf LAPSPLOT "lc\n"; 
                        printf LAPSPLOT "swi\n";} 
                    elsif("$field" eq "SW_OUT"){   # LIL
                        printf LAPSPLOT "svi\n";  
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "SAT_11U"){ 
                        printf LAPSPLOT "lci\n"; 
                        printf LAPSPLOT "s8a\n";} 
                    elsif("$field" eq "sat_11u"){ 
                        printf LAPSPLOT "lc\n"; 
                        printf LAPSPLOT "s8a\n";} 
                    elsif("$field" eq "SAT_12U"){ 
                        printf LAPSPLOT "lv\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "-5\n"; 
                        printf LAPSPLOT "SCA\n";
#                       printf LAPSPLOT "n\n";   
                                                }
                    elsif("$field" eq "sat_12u"){ 
                        printf LAPSPLOT "lv\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "5\n"; 
                        printf LAPSPLOT "SCA\n";
#                       printf LAPSPLOT "n\n";   
                                               }
                    elsif("$field" eq "SAT_WV"){ 
                        printf LAPSPLOT "lv\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "-3\n"; 
                        printf LAPSPLOT "S4A\n";
#                       printf LAPSPLOT "n\n";   
                                               }
                    elsif("$field" eq "sat_wv"){ 
                        printf LAPSPLOT "lv\n"; 
                        printf LAPSPLOT "y\n"; 
                        printf LAPSPLOT "3\n"; 
                        printf LAPSPLOT "S4A\n";
#                       printf LAPSPLOT "n\n";   
                                                }
                    elsif("$field" eq "SAT_39U"){ 
                        printf LAPSPLOT "lci\n"; 
                        printf LAPSPLOT "s3a\n";} 
                    elsif("$field" eq "SAT_D39"){ 
                        printf LAPSPLOT "lci\n"; 
                        printf LAPSPLOT "d39\n";} 
                    elsif("$field" eq "sat_d39"){ 
                        printf LAPSPLOT "lc\n"; 
                        printf LAPSPLOT "d39\n";} 
                    elsif("$field" eq "cld_cvr"){ 
                        printf LAPSPLOT "cv\n"; 
                        printf LAPSPLOT "0\n"; }
                    elsif("$field" eq "REF_MAX"){ 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "mri\n"; }
                    elsif("$field" eq "ref_max"){ 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "mr\n"; }
                    elsif("$field" eq "REF_ETOP"){ 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "mti\n"; 
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "ref_etop"){ 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "mt\n"; 
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "pcp_typ"){ 
                        printf LAPSPLOT "tp\n"; 
                        printf LAPSPLOT "-1\n"; 
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "PCP_INC"){ 
                        printf LAPSPLOT "pai\n"; 
                        printf LAPSPLOT "1\n"; }
                    elsif("$field" eq "pcp_inc"){ 
                        printf LAPSPLOT "pa\n"; 
                        printf LAPSPLOT "1\n"; }
                    elsif("$field" eq "PCP_INT"){ # L1S 
                        printf LAPSPLOT "pai\n"; 
                        printf LAPSPLOT "$hhmm\n"; }
                    elsif("$field" eq "PCP_ST4"){ # ST4
                        printf LAPSPLOT "s4i\n"; 
                        if($hhmm eq "" || length($hhmm) == 9){
                            printf LAPSPLOT "3.0\n"; 
	                }else{
	                    printf LAPSPLOT "$hhmm\n";
                        }
                        }                        
                    elsif("$field" eq "pcp_st4"){ 
                        printf LAPSPLOT "s4\n"; 
                        if($hhmm eq "" || length($hhmm) == 9){
                            printf LAPSPLOT "3.0\n"; 
	                }else{
	                    printf LAPSPLOT "$hhmm\n";
                        }
                        }                        
                    elsif("$field" eq "PCP_STO"){ 
                        printf LAPSPLOT "pai\n"; 
                        printf LAPSPLOT "-99\n"; }
                    elsif("$field" eq "pcp_sto"){ 
                        printf LAPSPLOT "pa\n"; 
                        printf LAPSPLOT "-99\n"; }
                    elsif("$field" eq "prcp_h2o"){ 
                        printf LAPSPLOT "pw\n";} 
                    elsif("$field" eq "PRCP_H2O"){ 
                        printf LAPSPLOT "pwi\n";} 
                    elsif("$field" eq "SNOW_INC"){ 
                        printf LAPSPLOT "sai\n"; 
                        printf LAPSPLOT "1\n"; }
                    elsif("$field" eq "snow_inc"){ 
                        printf LAPSPLOT "sa\n"; 
                        printf LAPSPLOT "1\n"; }
                    elsif("$field" eq "SNOW_STO"){ 
                        printf LAPSPLOT "sai\n"; 
                        printf LAPSPLOT "-99\n"; }
                    elsif("$field" eq "snow_sto"){ 
                        printf LAPSPLOT "sa\n"; 
                        printf LAPSPLOT "-99\n"; }
                    elsif("$field" eq "REFLCT"){ 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "lri\n"; }
                    elsif("$field" eq "reflct"){ 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "lr\n"; }
#                   elsif("$field" eq "CLD_LIQ"){ 
#                       printf LAPSPLOT "lsi\n"; 
#                       printf LAPSPLOT "-1\n"; 
#                       printf LAPSPLOT "a\n"; }
#                   elsif("$field" eq "cld_liq"){ 
#                       printf LAPSPLOT "ls\n"; 
#                       printf LAPSPLOT "-1\n"; 
#                       printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "CLD_LIQ"){ # LIL 
                        printf LAPSPLOT "isi\n";
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "cld_liq"){ 
                        printf LAPSPLOT "is\n"; 
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "CLD_ICE"){ 
                        printf LAPSPLOT "iei\n";
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "cld_ice"){ 
                        printf LAPSPLOT "ie\n"; 
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "CLD_CND"){ 
                        printf LAPSPLOT "ini\n";
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "cld_cnd"){ 
                        printf LAPSPLOT "in\n"; 
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "CLD_OD"){ 
                        printf LAPSPLOT "odi\n";
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "cld_od"){ 
                        printf LAPSPLOT "od\n"; 
                        printf LAPSPLOT "a\n"; }
                    elsif("$field" eq "SNOW_CVR"){ 
                        printf LAPSPLOT "sci\n";} 
                    elsif("$field" eq "snow_cvr"){ 
                        printf LAPSPLOT "sc\n"; }
                    elsif("$field" eq "SNOW_DEPTH"){ # L1S
                        printf LAPSPLOT "sdi\n";} 
                    elsif("$field" eq "snow_depth"){ # L1S
                        printf LAPSPLOT "sd\n"; }
                    elsif("$field" eq "LAND_FRAC"){ 
                        printf LAPSPLOT "gg\n";  
                        printf LAPSPLOT "lfi\n"; }
                    elsif("$field" eq "land_frac"){ 
                        printf LAPSPLOT "gg\n";  
                        printf LAPSPLOT "lf\n"; }
                    else 
                        { print "$source $level $field not available at the sfc\n"; }

                }elsif("$level" eq "0-6km"){ # 0-6km
                    if("$field" eq "WIND_SPD"){ 
                        printf LAPSPLOT "s6i\n"}   
                    elsif("$field" eq "wind_spd"){ 
                        printf LAPSPLOT "s6\n"}   
                    elsif("$field" eq "wind"){ 
                        printf LAPSPLOT "w6\n"}   
                    else 
                        { print "$source $level $field not available\n"; }

                }elsif("$level" eq "soil1"){ # soil1
                    if("$field" eq "RH"){ 
                        printf LAPSPLOT "smi\n";   
                        printf LAPSPLOT "1\n"; }  
                    elsif("$field" eq "rh"){ 
                        printf LAPSPLOT "sm\n";  
                        printf LAPSPLOT "1\n"; }  
                    else 
                        { print "$source $level $field not available\n"; }

                }elsif("$level" eq "soil2"){ # soil2
                    if("$field" eq "RH"){ 
                        printf LAPSPLOT "smi\n";   
                        printf LAPSPLOT "2\n"; }  
                    elsif("$field" eq "rh"){ 
                        printf LAPSPLOT "sm\n";  
                        printf LAPSPLOT "2\n"; }  
                    else 
                        { print "$source $level $field not available\n"; }

                }elsif("$level" eq "soil3"){ # soil3
                    if("$field" eq "RH"){ 
                        printf LAPSPLOT "smi\n";   
                        printf LAPSPLOT "3\n"; }  
                    elsif("$field" eq "rh"){ 
                        printf LAPSPLOT "sm\n";  
                        printf LAPSPLOT "3\n"; }  
                    else 
                        { print "$source $level $field not available\n"; }

                }elsif("$level" eq "xsect"){ # xsect analysis
                    if   ("$field" eq "temp" ){ 
                        printf LAPSPLOT "t\n";  
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "TEMP" ){ 
                        printf LAPSPLOT "ti\n";  
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "DEWPOINT" ){ 
                        printf LAPSPLOT "tdi\n";  
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "dewpoint" ){ 
                        printf LAPSPLOT "td\n";  
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "WETBULB" ){ 
                        printf LAPSPLOT "twi\n";  
                    }elsif("$field" eq "wetbulb" ){ 
                        printf LAPSPLOT "tw\n";  
                    }elsif("$field" eq "HT" ){ 
                        printf LAPSPLOT "hti\n";  
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "ht" ){ 
                        printf LAPSPLOT "ht\n";  
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "theta" ){ 
                        printf LAPSPLOT "pt\n";  
                        printf LAPSPLOT "a\n";  
                    }elsif("$field" eq "THETA" ){ 
                        printf LAPSPLOT "pti\n";  
                        printf LAPSPLOT "a\n";  
                    }elsif("$field" eq "thetae" ){ 
                        printf LAPSPLOT "ts\n";  
                    }elsif("$field" eq "THETAE" ){ 
                        printf LAPSPLOT "tsi\n";  
                    }elsif("$field" eq "CLD_CVR" ){ 
                        printf LAPSPLOT "cf\n"; 
                    }elsif("$field" eq "cld_cvr" ){ 
                        printf LAPSPLOT "cv\n"; 
                    }elsif("$field" eq "wind" ){ 
                        printf LAPSPLOT "vc\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "WIND_SPD" ) { 
                        printf LAPSPLOT "spi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "wind_spd" ) { 
                        printf LAPSPLOT "sp\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "wind_div" ) { 
                        printf LAPSPLOT "dv\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "WIND_DIV" ) { 
                        printf LAPSPLOT "dvi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "wind_vort" ) { 
                        printf LAPSPLOT "vo\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "WIND_VORT" ) { 
                        printf LAPSPLOT "voi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "wind_pvort" ) { 
                        printf LAPSPLOT "pv\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "WIND_PVORT" ) { 
                        printf LAPSPLOT "pvi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "vort_adv" ) { 
                        printf LAPSPLOT "va\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "wind_omega" ) { 
                        printf LAPSPLOT "om\n"; 
                        printf LAPSPLOT "a\n"; 
                        printf LAPSPLOT "k\n"; 
                    }elsif("$field" eq "WIND_OMEGA" ) { 
                        printf LAPSPLOT "omi\n"; 
                        printf LAPSPLOT "a\n"; 
                        printf LAPSPLOT "k\n"; 
                    }elsif("$field" eq "c_omega" ) { 
                        printf LAPSPLOT "om\n"; 
                        printf LAPSPLOT "a\n"; 
                        printf LAPSPLOT "c\n"; 
                    }elsif("$field" eq "C_OMEGA" ) { 
                        printf LAPSPLOT "omi\n"; 
                        printf LAPSPLOT "a\n"; 
                        printf LAPSPLOT "c\n"; 
                    }elsif("$field" eq "wind_u" ) { 
                        printf LAPSPLOT "u\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "WIND_U" ) { 
                        printf LAPSPLOT "ui\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "wind_v" ) { 
                        printf LAPSPLOT "v\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "WIND_V" ) { 
                        printf LAPSPLOT "vi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "rh" ){ # LH3/LH3
                        printf LAPSPLOT "rl\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "RH" ){ 
                        printf LAPSPLOT "rli\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "rh3" ){ # LH3/RH3   
                        printf LAPSPLOT "rh\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "RH3" ){ 
                        printf LAPSPLOT "rhi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "sh" ){ 
                        printf LAPSPLOT "sh\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "SH" ){ 
                        printf LAPSPLOT "shi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "mr" ){ 
                        printf LAPSPLOT "sh\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "MR" ){ 
                        printf LAPSPLOT "shi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_liq" ){ 
                        printf LAPSPLOT "ls\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "CLD_LIQ" ){ 
                        printf LAPSPLOT "lsi\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_ice" ){ 
                        printf LAPSPLOT "ci\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "CLD_ICE" ){ 
                        printf LAPSPLOT "cii\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_cnd" ){ 
                        printf LAPSPLOT "cn\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "CLD_CND" ){ 
                        printf LAPSPLOT "cni\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_type" ){ 
                        printf LAPSPLOT "tc\n"; 
                    }elsif("$field" eq "REFLCT" ){ 
                        printf LAPSPLOT "ri\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "reflct" ){ 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_typ" ){ 
                        printf LAPSPLOT "tp\n"; 
                    }elsif("$field" eq "pcp_cnc" ){ # LWC
                        printf LAPSPLOT "pc\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_rai" ){ # LWC
                        printf LAPSPLOT "rn\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "PCP_RAI" ){ # LWC
                        printf LAPSPLOT "rni\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_sno" ){ # LWC
                        printf LAPSPLOT "sn\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "PCP_SNO" ){ # LWC
                        printf LAPSPLOT "sni\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_ice" ){ # LWC
                        printf LAPSPLOT "ic\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "PCP_ICE" ){ # LWC
                        printf LAPSPLOT "ici\n"; 
                        printf LAPSPLOT "a\n"; 
                    }else{ 
                        print "$source $level $field not available\n"; 
                    }

                }elsif("$level" eq "sndg" || "$level" eq "allsky"){ # analysis
                    if($sounding == 1){
                        printf LAPSPLOT "a\n"; 
                    }

                }else{ # Analyses - 3D
                    if   ("$field" eq "CLD_CVR" ) {   # LCP
                        printf LAPSPLOT "cg\n";  
                        printf LAPSPLOT "-$level\n"; 
                    }elsif("$field" eq "cld_cvr" ) {  # LCP
                        printf LAPSPLOT "cv\n"; 
                        printf LAPSPLOT "-$level\n"; 
                    }elsif("$field" eq "HT" ) { 
                        printf LAPSPLOT "hti\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "ht" ) { 
                        printf LAPSPLOT "ht\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "TEMP" ) {  # LT1
                        printf LAPSPLOT "ti\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "temp" ) {  # LT1
                        printf LAPSPLOT "t\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "THETA" ) { 
                        printf LAPSPLOT "pti\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "theta" ) { 
                        printf LAPSPLOT "pt\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "RH" ) { # LH3
                        printf LAPSPLOT "lqi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "l\n"; 
                    }elsif("$field" eq "rh" ) { 
                        printf LAPSPLOT "lq\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "l\n"; 
                    }elsif("$field" eq "RH3" ) { # LH3
                        printf LAPSPLOT "lqi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "3\n"; 
                    }elsif("$field" eq "rh3" ) { # LH3
                        printf LAPSPLOT "lq\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "r\n"; 
                        printf LAPSPLOT "3\n"; 
                    }elsif("$field" eq "DEWPOINT" ) { 
                        printf LAPSPLOT "lqi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "d\n"; 
                        printf LAPSPLOT "l\n"; 
                    }elsif("$field" eq "dewpoint" ) { 
                        printf LAPSPLOT "lq\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "d\n"; 
                        printf LAPSPLOT "l\n"; 
                    }elsif("$field" eq "SH" ) { # LQ3
                        printf LAPSPLOT "lqi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 
                    }elsif("$field" eq "sh" ) { 
                        printf LAPSPLOT "lq\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 
                    }elsif("$field" eq "MR" ) { # LQ3
                        printf LAPSPLOT "lqi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 
                    }elsif("$field" eq "mr" ) { 
                        printf LAPSPLOT "lq\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "q\n"; 
#                   }elsif("$field" eq "radial_vel") { includes obs for all radars
#                       printf LAPSPLOT "wd\n"; 
#                       printf LAPSPLOT "$level\n"; 
#                       printf LAPSPLOT "ob\n"; 
#                       printf LAPSPLOT "0\n"; 
#                       printf LAPSPLOT "y\n"; 
#                       printf LAPSPLOT "n\n"; 
#                       printf LAPSPLOT "n\n"; 
                    }elsif("$field" eq "wind" ) { # LW3
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vc\n"; 
                    }elsif("$field" eq "WIND_SPD" ) { 
                        printf LAPSPLOT "wdi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "sp\n"; 
                    }elsif("$field" eq "wind_spd" ) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "sp\n"; 
                    }elsif("$field" eq "wind_div" ) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "dv\n"; 
                    }elsif("$field" eq "WIND_DIV" ) { 
                        printf LAPSPLOT "wdi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "dv\n"; 
                    }elsif("$field" eq "wind_vort" ) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vo\n"; 
                    }elsif("$field" eq "WIND_VORT" ) { 
                        printf LAPSPLOT "wdi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "vo\n"; 
                    }elsif("$field" eq "wind_pvort" ) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "pv\n"; 
                    }elsif("$field" eq "WIND_PVORT" ) { 
                        printf LAPSPLOT "wdi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "pv\n"; 
                    }elsif("$field" eq "vort_adv" ) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "va\n"; 
                    }elsif("$field" eq "WIND_OMEGA" ) { 
                        printf LAPSPLOT "woi\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "wind_omega" ) { 
                        printf LAPSPLOT "wo\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "C_OMEGA" ) { 
                        printf LAPSPLOT "coi\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "c_omega" ) { 
                        printf LAPSPLOT "co\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "WIND_U" ) { 
                        printf LAPSPLOT "wdi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "u\n"; 
                    }elsif("$field" eq "wind_u" ) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "u\n"; 
                    }elsif("$field" eq "WIND_V" ) { 
                        printf LAPSPLOT "wdi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "v\n"; 
                    }elsif("$field" eq "wind_v" ) { 
                        printf LAPSPLOT "wd\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "v\n"; 
                    }elsif("$field" eq "REFLCT" ) { # LPS
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "rfi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "reflct" ) { # LPS
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "rf\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_liq" ) { # LWC
                        printf LAPSPLOT "ls\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "CLD_LIQ" ) { 
                        printf LAPSPLOT "lsi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_ice" ) { # LWC 
                        printf LAPSPLOT "ci\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "CLD_ICE" ) {
                        printf LAPSPLOT "cii\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_cnd" ) { # LWC
                        printf LAPSPLOT "cn\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "CLD_CND" ) { 
                        printf LAPSPLOT "cni\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_cnc" ) { 
                        printf LAPSPLOT "pc\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_rai" ) { 
                        printf LAPSPLOT "rn\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "PCP_RAI" ) { 
                        printf LAPSPLOT "rni\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_sno" ) { 
                        printf LAPSPLOT "sn\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "PCP_SNO" ) { 
                        printf LAPSPLOT "sni\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "pcp_ice" ) { 
                        printf LAPSPLOT "pi\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "PCP_ICE" ) { 
                        printf LAPSPLOT "pii\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }elsif("$field" eq "cld_type" ) { 
                        printf LAPSPLOT "cy\n"; 
                        printf LAPSPLOT "$level\n"; 
                    }elsif("$field" eq "pcp_typ" ) { 
                        printf LAPSPLOT "py\n"; 
                        printf LAPSPLOT "$level\n"; 
                        printf LAPSPLOT "a\n"; 
                    }else{ 
                        print "$source $level mb $field not available (via analysis pressure grid)\n"; 

                          } # if field

                      } # if level

                  }elsif("$source" eq "balanced"){
                      if("$level" eq "sfc/2d"){

                          if("$field" eq "wind" ) {      # lsx
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "vc\n"; 
                          }elsif("$field" eq "wind_u" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "u\n"; 
                          }elsif("$field" eq "WIND_U" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "u\n"; 
                          }elsif("$field" eq "wind_v" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "v\n"; 
                          }elsif("$field" eq "WIND_V" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "v\n"; 
                          }elsif("$field" eq "wind_spd" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "sp\n"; 
                          }elsif("$field" eq "WIND_SPD" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "sp\n"; 
                          }elsif("$field" eq "wind_div" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "dv\n"; 
                          }elsif("$field" eq "WIND_DIV" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "dv\n"; 
                          }elsif("$field" eq "temp"){     
                              printf LAPSPLOT "by\n"; 
                              if($units eq "metric"){
                                  printf LAPSPLOT "tc\n"; 
                              }else{
                                  printf LAPSPLOT "tf\n"; 
                              }
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "TEMP"){     
                              printf LAPSPLOT "by\n"; 
                              if($units eq "metric"){
                                  printf LAPSPLOT "tci\n"; 
                              }else{
                                  printf LAPSPLOT "tfi\n"; 
                              }
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "dewpoint"){ 
                              printf LAPSPLOT "by\n"; 
                              if($units eq "metric"){
                                  printf LAPSPLOT "dc\n"; 
                              }else{
                                  printf LAPSPLOT "df\n"; 
                              }
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "DEWPOINT"){ 
                              printf LAPSPLOT "by\n"; 
                              if($units eq "metric"){
                                  printf LAPSPLOT "dci\n"; 
                              }else{
                                  printf LAPSPLOT "dfi\n"; 
                              }
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "RH"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "hui\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "rh"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "hu\n";  
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "wind_vort"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "vo\n"; 
                          }elsif("$field" eq "WIND_VORT"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "voi\n"; 
                          }elsif("$field" eq "sh"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "mr\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "SH"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "mri\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "mr"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "mr\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "MR"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "mri\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "PCP_INC"){ 
                              printf LAPSPLOT "s4i\n"; 
                              printf LAPSPLOT "$model_fcst_intvl_hr\n"; 
                          }elsif("$field" eq "p_msl"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "pm\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "red_p"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "p\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "stn_p"){ 
                              printf LAPSPLOT "by\n"; 
                              printf LAPSPLOT "ps\n"; 
                              printf LAPSPLOT "bn\n"; 
                          }elsif("$field" eq "HT" ){ 
                              printf LAPSPLOT "gg\n"; 
                              printf LAPSPLOT "tni\n"; 
                          }elsif("$field" eq "ht" ){ 
                              printf LAPSPLOT "gg\n"; 
                              printf LAPSPLOT "tn\n"; 
                          }else{
                              print "$source sfc $field not available\n"; 
                          }

                      }elsif("$level" eq "xsect"){ # xsect balanced
                          if   ("$field" eq "temp" ){ 
                              printf LAPSPLOT "tb\n";  
                          }elsif("$field" eq "TEMP" ){ 
                              printf LAPSPLOT "tbi\n";  
                          }elsif("$field" eq "HT" ) { 
                              printf LAPSPLOT "hbi\n"; 
                          }elsif("$field" eq "ht" ) { 
                              printf LAPSPLOT "hb\n"; 
                          }elsif("$field" eq "THETA" ){ 
                              printf LAPSPLOT "pbi\n";  
                          }elsif("$field" eq "theta" ){ 
                              printf LAPSPLOT "pb\n";  
                          }elsif("$field" eq "thetae" ){ 
                              printf LAPSPLOT "be\n";  
                          }elsif("$field" eq "THETAE" ){ 
                              printf LAPSPLOT "bei\n";  
                          }elsif("$field" eq "CLD_CVR" ){ # defaults over to analyzed
                              printf LAPSPLOT "cf\n"; 
                          }elsif("$field" eq "cld_cvr" ){ # defaults over to analyzed
                              printf LAPSPLOT "cv\n"; 
                          }elsif("$field" eq "c_omega" ) { # defaults over to analyzed
                              printf LAPSPLOT "om\n"; 
                              printf LAPSPLOT "a\n"; 
                              printf LAPSPLOT "c\n"; 
                          }elsif("$field" eq "C_OMEGA" ) { # defaults over to analyzed
                              printf LAPSPLOT "omi\n"; 
                              printf LAPSPLOT "a\n"; 
                              printf LAPSPLOT "c\n"; 
                          }elsif("$field" eq "cld_type" ){ # defaults over to analyzed
                              printf LAPSPLOT "tc\n"; 
                          }elsif("$field" eq "wind" ){ 
                              printf LAPSPLOT "vc\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "wind_spd" ) { 
                              printf LAPSPLOT "sp\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "WIND_SPD" ) { 
                              printf LAPSPLOT "spi\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "wind_div" ) { 
                              printf LAPSPLOT "dv\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "WIND_DIV" ) { 
                              printf LAPSPLOT "dvi\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "wind_vort" ) { 
                              printf LAPSPLOT "vo\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "WIND_VORT" ) { 
                              printf LAPSPLOT "voi\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "wind_pvort" ) { 
                              printf LAPSPLOT "pv\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "WIND_PVORT" ) { 
                              printf LAPSPLOT "pvi\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "vort_adv" ) { 
                              printf LAPSPLOT "va\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "wind_omega" ) { 
                              printf LAPSPLOT "om\n"; 
                              printf LAPSPLOT "n\n"; 
                              printf LAPSPLOT "k\n"; 
                          }elsif("$field" eq "WIND_OMEGA" ) { 
                              printf LAPSPLOT "omi\n"; 
                              printf LAPSPLOT "n\n"; 
                              printf LAPSPLOT "k\n"; 
                          }elsif("$field" eq "wind_u" ) { 
                              printf LAPSPLOT "u\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "WIND_U" ) { 
                              printf LAPSPLOT "ui\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "wind_v" ) { 
                              printf LAPSPLOT "v\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "WIND_V" ) { 
                              printf LAPSPLOT "vi\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "rh" ){ 
                              printf LAPSPLOT "rl\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "RH" ){ 
                              printf LAPSPLOT "rli\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "sh" ){ 
                              printf LAPSPLOT "sh\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "SH" ){ 
                              printf LAPSPLOT "shi\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "mr" ){ 
                              printf LAPSPLOT "sh\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "MR" ){ 
                              printf LAPSPLOT "shi\n"; 
                              printf LAPSPLOT "n\n"; 
                          }elsif("$field" eq "CLD_LIQ" ){ 
                              printf LAPSPLOT "lsi\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "cld_liq" ){ 
                              printf LAPSPLOT "ls\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "CLD_ICE" ){ 
                              printf LAPSPLOT "cii\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "cld_ice" ){ 
                              printf LAPSPLOT "ci\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "CLD_CND" ){ 
                              printf LAPSPLOT "cni\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "cld_cnd" ){ 
                              printf LAPSPLOT "cn\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "REFLCT" ){ 
                              printf LAPSPLOT "ri\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "reflct" ){  
                              printf LAPSPLOT "rf\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "pcp_typ" ){ 
                              printf LAPSPLOT "tp\n"; 
                          }else{ 
                              print "$source $level $field not available\n"; 
                          }

                      }elsif("$level" eq "sndg" || "$level" eq "allsky"){ # Balanced Sounding
                          if($sounding == 1){
                              printf LAPSPLOT "n\n"; 
                          }

                      }else{               # 3D Balanced analyses
                          if   ("$field" eq "ht" ) { 
                              printf LAPSPLOT "bh\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "HT" ) { 
                              printf LAPSPLOT "bhi\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "temp" ) { 
                              printf LAPSPLOT "bt\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "TEMP" ) { 
                              printf LAPSPLOT "bti\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "dewpoint" ) { 
                              printf LAPSPLOT "rb\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "d\n"; 
                              printf LAPSPLOT "l\n"; 

                          }elsif("$field" eq "DEWPOINT" ) { 
                              printf LAPSPLOT "rbi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "d\n"; 
                              printf LAPSPLOT "l\n"; 

                          }elsif("$field" eq "theta" ) { 
                              printf LAPSPLOT "pb\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "THETA" ) { 
                              printf LAPSPLOT "pbi\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "radial_vel") { 
                              printf LAPSPLOT "wd\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "ob\n"; 
                              printf LAPSPLOT "0\n"; 
                              printf LAPSPLOT "y\n"; 
                              printf LAPSPLOT "n\n"; 
                              printf LAPSPLOT "n\n"; 

                          }elsif("$field" eq "wind" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "vc\n"; 

                          }elsif("$field" eq "WIND_SPD" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "sp\n"; 

                          }elsif("$field" eq "wind_spd" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "sp\n"; 

                          }elsif("$field" eq "wind_u" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "u\n"; 

                          }elsif("$field" eq "WIND_U" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "u\n"; 

                          }elsif("$field" eq "wind_v" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "v\n"; 

                          }elsif("$field" eq "WIND_V" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "v\n"; 

                          }elsif("$field" eq "wind_div" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "dv\n"; 

                          }elsif("$field" eq "WIND_DIV" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "dv\n"; 

                          }elsif("$field" eq "wind_vort" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "vo\n"; 

                          }elsif("$field" eq "WIND_VORT" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "vo\n"; 

                          }elsif("$field" eq "wind_pvort" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "pv\n"; 

                          }elsif("$field" eq "WIND_PVORT" ) { 
                              printf LAPSPLOT "bwi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "pv\n"; 

                          }elsif("$field" eq "vort_adv" ) { 
                              printf LAPSPLOT "bw\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "va\n"; 

                          }elsif("$field" eq "wind_omega" ) { 
                              printf LAPSPLOT "bo\n"; 
                              printf LAPSPLOT "$level\n"; 
      
                          }elsif("$field" eq "WIND_OMEGA" ) { 
                              printf LAPSPLOT "boi\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "C_OMEGA" ) { 
                              printf LAPSPLOT "coi\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "c_omega" ) { 
                              printf LAPSPLOT "co\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "REFLCT" ) { 
                              printf LAPSPLOT "rf\n"; 
                              printf LAPSPLOT "rfi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 

                          }elsif("$field" eq "reflct" ) { 
                              printf LAPSPLOT "rf\n"; 
                              printf LAPSPLOT "rf\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 

                          }elsif("$field" eq "cld_type" ) { 
                              printf LAPSPLOT "cy\n"; 
                              printf LAPSPLOT "$level\n"; 

                          }elsif("$field" eq "cld_liq" ) { # LWC 
                              printf LAPSPLOT "ls\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 

                          }elsif("$field" eq "CLD_LIQ" ) { 
                              printf LAPSPLOT "lsi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 

                          }elsif("$field" eq "cld_ice" ) { 
                              printf LAPSPLOT "ci\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 

                          }elsif("$field" eq "CLD_ICE" ) { 
                              printf LAPSPLOT "cii\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 

                          }elsif("$field" eq "pcp_cnc" ) { 
                              printf LAPSPLOT "pc\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "pcp_rai" ) { 
                              printf LAPSPLOT "rn\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "PCP_RAI" ) { 
                              printf LAPSPLOT "rni\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "pcp_sno" ) { 
                              printf LAPSPLOT "sn\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "PCP_SNO" ) { 
                              printf LAPSPLOT "sni\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "pcp_ice" ) { 
                              printf LAPSPLOT "pi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "PCP_ICE" ) { 
                              printf LAPSPLOT "pii\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 
                          }elsif("$field" eq "cld_type" ) { 
                              printf LAPSPLOT "cy\n"; 
                              printf LAPSPLOT "$level\n"; 
                          }elsif("$field" eq "pcp_typ" ) { 
                              printf LAPSPLOT "py\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "a\n"; 

                          }elsif("$field" eq "RH" ) { 
                              printf LAPSPLOT "rbi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "rh\n"; 
                              printf LAPSPLOT "l\n"; 

                          }elsif("$field" eq "rh" ) { 
                              printf LAPSPLOT "rb\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "rh\n"; 
                              printf LAPSPLOT "l\n"; 

                          }elsif("$field" eq "RH3" ) { # Balance LH3 
                              printf LAPSPLOT "rbi\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "rh\n"; 
                              printf LAPSPLOT "3\n"; 

                          }elsif("$field" eq "rh3" ) { # Balance LH3 
                              printf LAPSPLOT "rb\n"; 
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "rh\n"; 
                              printf LAPSPLOT "3\n"; 

                          }elsif("$field" eq "SH" ) { 
                              printf LAPSPLOT "rbi\n"; 
#                             printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 

                          }elsif("$field" eq "sh" ) { 
                              printf LAPSPLOT "rb\n"; 
#                             printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 

                          }elsif("$field" eq "MR" ) { 
                              printf LAPSPLOT "rbi\n"; 
#                             printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 

                          }elsif("$field" eq "mr" ) { 
                              printf LAPSPLOT "rb\n"; 
#                             printf LAPSPLOT "$hhmm\n";
                              printf LAPSPLOT "$level\n"; 
                              printf LAPSPLOT "q\n"; 

                          }else{
                              print "$source $level mb $field not available\n"; 

                          } # if field

                      } # if level
           
                  }else{ 
                      print "$source not yet available...\n"; 

                  } # if source

                  if("$level" eq "allsky"){
                      if($npix_safe == "885"){
                          printf LAPSPLOT "0,90\n";
                          $minalt = 0;
                          $maxalt = 90;
                      }else{
                          ($minalt,$maxalt) = split (',',$npix_safe) ;
                          printf LAPSPLOT "$minalt,$maxalt\n";

                          my $minazi = 0.0;           
                          my $maxazi = $maxalt * 4.0;
                          my ($junk,$minazi_in,$maxazi_in);
                          ($junk,$junk,$minazi_in,$maxazi_in,$alt_scale_in,$azi_scale_in) = split (',',$npix_safe) ;
                          if(defined $minazi_in){$minazi = $minazi_in;}
                          if(defined $maxazi_in){$maxazi = $maxazi_in;}
                          printf LAPSPLOT "$minazi,$maxazi\n";

                          my $alt_scale = 0.25;
                          my $azi_scale = 0.25;
                          if(defined $alt_scale_in){$alt_scale = $alt_scale_in;}
                          if(defined $azi_scale_in){$azi_scale = $azi_scale_in;}
                          printf LAPSPLOT "$alt_scale,$azi_scale\n";
                      }
                      $jdim = $maxalt - $minalt + 1;
                  }

               } # foreach level 
            } # foreach field (did we lose track of the braces somewhere?)
        } # if source eq WGI/DIFF 
      } # foreach source
    } # foreach domain
  
#   print "frames_safe at loop end = $frames_safe\n";

    $frames_safe = $frames_safe - 1;

    printf LAPSPLOT "q\n";

  } # while frames > 0

  printf LAPSPLOT "q\n";
  close LAPSPLOT;

# $laps_data_root = $DomainDir/$domain/data;

# print "laps_data_root = $laps_data_root<br>";

  my $window;
  my $resolution;
  my $res_x;
  my $res_y;

  my $xhigh;
  my $xlow;
  my $yhigh;
  my $ylow;
  my $yhigh_thresh;
  my $ylow_thresh;
  my $x_hw;
  my $y_hw;

# Read grid dimensions
  my $xdim;
  my $ydim;
  $domain_nl = "nest7grid.parms";
  if(-e "$laps_data_root/static/$domain_nl"){
    $nl_var="NX_L";
    @xdim=&laps_tools::get_nl_value($domain_nl,$nl_var,$laps_data_root);
    $nl_var="NY_L";
    @ydim=&laps_tools::get_nl_value($domain_nl,$nl_var,$laps_data_root);
    $xdim = @xdim[0];
    $ydim = @ydim[0];
#   print "xdim,ydim is $xdim,$ydim<br>\n";
  }

  my $aspect_ratio = ($xdim-1.0) / ($ydim-1.0);
# print "aspect_ratio is $aspect_ratio<br>\n";

# print "sect/window 4 = $sect $window\n";

  my $image_type = "gif";

# Run lapsplot and generate the GIF here
  if($sect eq "hsect"){
    $x_hw  = 0.5 / $zoom_safe;
#   if($domain_first eq "co" || $domain_first =~ "co_prl" || $domain_first =~ "ruc20" || $domain_first =~ "t2" || $domain_first =~ "goes"){
    if($aspect_ratio > 1.40){
        $res_y=$npix_safe;
        $res_x=int($res_y*1200./885.);
        $resolution="$res_x"."x"."$res_y";
        $y_hw  = 0.36 / $zoom_safe;
        $ylow_thresh  = 0.14;
        $yhigh_thresh = 0.86;
#   }elsif($aspect_ratio > 1.192){
    }elsif($aspect_ratio > 1.190){
        $res_y=$npix_safe;
        $res_x=int($res_y*1056./885.);
        $resolution="$res_x"."x"."$res_y";
        $y_hw  = 0.42 / $zoom_safe;
        $ylow_thresh  = 0.08;
        $yhigh_thresh = 0.92;
    }else{
        $res_y=$npix_safe;
        $res_x=$res_y;
        $resolution="$res_x"."x"."$res_y";
        $y_hw  = 0.5 / $zoom_safe;
        $ylow_thresh  = 0.0;
        $yhigh_thresh = 1.0;
    }

#   print "resolution is $resolution<br>\n";

    $xlow  = $xcen_safe - $x_hw;
    $xhigh = $xcen_safe + $x_hw;
    $ylow  = $ycen_safe - $y_hw;
    $yhigh = $ycen_safe + $y_hw;


#   Correct parms if they are invalid
#   $window="$xlow:$ylow:$xhigh:$yhigh";
#   print "window initially is $window<br>\n";

#   print "ycen_safe is $ycen_safe<br>\n";

    if($xlow < 0.){
        $xhigh = $xhigh - $xlow;
        $xcen_safe  = $xcen_safe  - $xlow;
        $xlow  = 0.;
    }elsif($xhigh > 1.){
        $xlow  = $xlow - ($xhigh - 1.0);
        $xcen_safe  = $xcen_safe - ($xhigh - 1.0);
        $xhigh = 1.0;
    }

    if($ylow < $ylow_thresh){
        $yhigh =      $yhigh      + ($ylow_thresh - $ylow);
        $ycen_safe  = $ycen_safe  + ($ylow_thresh - $ylow);
        $ylow       = $ylow_thresh;
    }elsif($yhigh > $yhigh_thresh){
        $ylow       = $ylow -      ($yhigh - $yhigh_thresh);
        $ycen_safe  = $ycen_safe - ($yhigh - $yhigh_thresh);
        $yhigh      = $yhigh_thresh;
    }

#   $xcen_safe = ($xlow + $xhigh) / 2.0;
#   $ycen_safe = ($ylow + $yhigh) / 2.0;

    $window="$xlow:$ylow:$xhigh:$yhigh";
#   print "window (corrected) is $window<br>\n";

  }elsif($sect eq "sndg"){ # Sounding
    $res_y=$npix_safe;
    $res_x=$res_y;
#   $resolution="885x885";
    $resolution="$res_x"."x"."$res_y";
    $window="0.00:0.00:1.00:1.00";

    if($ycen_safe =~ "l"){ # lat/lon mode
    }else{
      if($xcen_safe < 1){
         $xcen_safe = 1;
      }
      if($ycen_safe < 1){
         $ycen_safe = 1;
      }
    }

  }elsif($sect eq "xsect"){ # Sounding
#   $resolution="1056x885";
    $res_y=$npix_safe;
    $res_x=int($res_y*1.192 + .5);
#   $res_x=$res_y;
    $resolution="$res_x"."x"."$res_y";
#   $window="0.06:0.14:0.94:0.86";
    $window="0.06:0.13:0.94:0.85";

  }else{ # allsky
    $window=$jdim;
#   $window="91";
    $image_type = "png";

  }

# print "sect/window 5 = $sect $window\n";

# Set Up Machine, Shell, and Image Type
# my $machine = "jayhawk"; # This won't work until we enable ssh on pubweb@arac
# my $shell = "/usr/local/bin/ssh";
# my $image_type = "jpg";

  my $machine = "tst1-100";      # hugo / ren also works but can have long runtimes
  my $shell = " ";

  my $exedir;
  $exedir = "@prefix@/bin";

  if ($wgi_only == 0) {
#   print  "$request_root/lapsplot/lapsplot_gifs.sh $$ $window $request_root/lapsplot $web_root/$ScratchDir/lapsplot.in_$$ $exedir $laps_data_root $ncarg_root $animate $resolution\n";
    if ($montage == 1) {
        if ($ntimes > 1 && $i_montage == 1) {
            $animate = "$nmontage";
        }

        if($animate eq "yes"){
#           if($ndims == 1){
#               $nanims = $ntimes; # 1D montages at multiple times
#           }elsif($ndims == 2){
                $nanims = $nmontage;
#           }
        }else{

#           Original Strategy
#           $ncols = $nmontage;
#           $nrows = $nframes / $ncols;

#           Multiple Sources and Fields
            $nrows = $nmontage;
            $ncols = $nframes / $nrows;
        }

        print "i_montage=$i_montage nframes=$nframes nmontage=$nmontage animate=$animate ntimes=$ntimes nrows=$nrows ncols=$ncols ndims=$ndims | ";

        my $nmatrix;

        my $order = "column_major";

        if($ndims == 2 && $ntimes >= 1){ # 2D montages at single/multiple times
            $nanims = $ntimes;
#           $nrows = $nrows / $ntimes;

            $nmatrix = $nframes / $ntimes;

            if($n_domains == 1 && $n_sources > 1){ 
                $nrows = $n_sources;
                $ncols = $nmatrix / $nrows;
            }elsif($n_domains > 1 && $n_sources == 1){ 
                $nrows = $n_domains;
                $ncols = $nmatrix / $nrows;
            }elsif($n_fields_uc > 1 && $n_levels > 1){ 
                $ncols = $n_levels;
                $nrows = $nmatrix / $ncols;
                $order = "row_major";
            }elsif($animate eq "yes" && $ntimes == 1 && $i_montage < 0){
                $nrows = 1;
                $ncols = $nframes / $nmontage;
                $nanims = $nmontage;
            }else{
                $ncols = $nmatrix / $nrows;
            }

            if($ntimes > 1){
                $ndims++;
            }
#           Original Formulation
#           $nrows = $nrows * $n_domains;
#           $ncols = $nmontage / $n_domains;

#           New Formulation (Multiple Sources and Fields)
#           $nrows = $nrows * $n_domains;
#           $ncols = $nframes / $nrows;

#           $nrows = $nrows * $n_levels;
#           $ncols = $nmontage / $n_levels;
        }

        if($ndims == 1 && $ntimes > 1){ # 1D montages at multiple times 
            $ndims++;
            $nanims = $ntimes;
            $nrows = 1;                  
            $nmatrix = $nframes / $ntimes;
            $ncols = $nmatrix;
            if($nmatrix == 4 && $n_levels == 1){ 
                $ncols = 2;
                $nrows = 2;
            }elsif($nmatrix > 3 && $n_levels == 1){ # Convert long rows into an added dimension
                $ncols = 3;
                $nrows = int( ($nmatrix+($ncols-1)) / $ncols);
                $ndims++;
            }
        }

        if($ndims == 1 && $ntimes == 1){ # 1D montage at single time 
            $nanims = $ntimes;
            $nrows = 1;                  
            $nmatrix = $nframes / $ntimes;
            $ncols = $nmatrix;
            if($i_montage < 1){ # animate the multiple frames
#               $animate = $ncols;
            }else{
                if($nmatrix == 4 && $n_levels == 1){ # Convert long rows into an added dimension
                    $ncols = 2;
                    $nrows = int( ($nmatrix+($ncols-1)) / $ncols);
                    $ndims++;
                }elsif($nmatrix > 3 && $n_levels == 1){                                                   
                    $ncols = 3;
                    $nrows = int( ($nmatrix+($ncols-1)) / $ncols);
                    $ndims++;
                }
            }
        }

        print "nrows=$nrows ncols=$ncols nanims=$nanims nmatrix=$nmatrix ndims=$ndims | ";

        $geom = "$ncols"."x"."$nrows"."x"."$nanims";

#       if($i_montage < 1 && $ndims >= 2){ # animate multiple 1D/2D montages
        if($ndims >= 2){ # animate multiple 1D/2D montages (or simply run montage file for one frame montage)

          $animate = $geom;

#         my $montage_file = "$web_root/$ScratchDir/$$/montage.sh";
          my $montage_file = "$web_root/$ScratchDir/montage"."_$$.sh";
          open(MONTAGE,">$montage_file") ||
          die "Content-type: text/html\n\nCan't open $montage_file: $!\n";
          printf MONTAGE "#!/bin/sh\n\n";
          printf MONTAGE "#$geom\n\n";
          printf MONTAGE "cd $web_root/$ScratchDir/$$\n\n";

          my $iframe = 1;
          my $ianim = 1;
          while ($ianim <= $nanims){
            my $iframe_anim = 1;

#           while ($iframe_anim <= ($nrows*$ncols)){
            while ($iframe_anim <= $nmatrix){
                printf MONTAGE "montage ";
                if($iframe < 10){   
                    printf MONTAGE "gmeta_$$.000$iframe.sun.gif ";
                }else{
                    printf MONTAGE "gmeta_$$.00$iframe.sun.gif ";
                }
                $iframe++;
                $iframe_anim++;
            }

            if ($order eq "column_major"){
                printf MONTAGE "-mode Concatenate -tile $geom gmeta_$$"."_$ianim.gif ";
            }else{ # row major
                printf MONTAGE "-mode Concatenate -tile 1x$cols | montage - -tile $rows"."x1 gmeta_$$"."_$ianim.gif ";
            }
            printf MONTAGE "\n";
            $ianim++;
          }    

          printf MONTAGE "\n";

          if($nanim == 1){
            printf MONTAGE "mv gmeta_$$"."_1.gif $web_root/$ScratchDir/gmeta_$$.gif ";
          }else{ # animate the multiple montages
            $ianim = 1;
            printf MONTAGE "convert -delay $delay_safe -loop 0 ";
            while ($ianim <= $nanims){
                printf MONTAGE "gmeta_$$"."_$ianim.gif ";
                $ianim++;
            }
            if ($nanims > 1) {
                printf MONTAGE "gmeta_$$"."_$nanims.gif "; # repeat the last montage
            }
            printf MONTAGE "$web_root/$ScratchDir/gmeta_$$.gif\n";                                            
          }

          close MONTAGE;

        } # write MONTAGE script if $ndims >= 2

        print "i_montage=$i_montage nmontage=$nmontage animate=$animate ndims=$ndims geom=$geom";

    } # montage = 1 


#   Update log file prior to calling lapsplot
    $returnAddress = ($ENV{'REMOTE_HOST'} || $ENV{REMOTE_ADDR} ||
                  "(Unknown requestor)");
    $logFile = "$web_root/cgi/laps_anal_products.cgi.log";
    open(LOG,">>$logFile") ||
        die "Content-type: text/html\n\nCan't open $logFile: $!\n";
#   get time for log file
    $time = time();
    ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = gmtime($time);
    $thisMonth=$month[$mon];
    $nHours=($stopSecs+1-$startSecs)/3600;
    $year=$year+1900;
    printf LOG "....$thisMonth $mday %02d\:%02d\:%02d UTC $year  $returnAddress " .
             " $domain_first $out_sources %s $out_fields %s $out_levels %s $$ calling lapsplot script\n"
             ,$hour,$min,$sec,
             $ENV{'REMOTE_USER'};
    close LOG;


#   Run lapsplot
    if ($out_levels =~ "allsky"){
#       system("@prefix@/etc/www/lapsplot/lapsplot_gifs.sh $$ $window $request_root/lapsplot $delay_safe $exedir $laps_data_root allsky      $animate $zoom_safe 1> $web_root/$ScratchDir/lapsplot.out_$$ 2>&1"); 
        system("ssh oplapb\@dlaps-ms1.fsl.noaa.gov @prefix@/etc/www/lapsplot/lapsplot_gifs.sh $$ $window $request_root/lapsplot $delay_safe $exedir $laps_data_root allsky      $animate $zoom_safe 1> $web_root/$ScratchDir/lapsplot.out_$$ 2>&1"); 
    }else{
#       system("@prefix@/etc/www/lapsplot/lapsplot_gifs.sh $$ $window $request_root/lapsplot $delay_safe $exedir $laps_data_root $ncarg_root $animate $resolution 1> $web_root/$ScratchDir/lapsplot.out_$$ 2>&1"); 
        system("ssh oplapb\@dlaps-ms1.fsl.noaa.gov @prefix@/etc/www/lapsplot/lapsplot_gifs.sh $$ $window $request_root/lapsplot $delay_safe $exedir $laps_data_root $ncarg_root $animate $resolution 1> $web_root/$ScratchDir/lapsplot.out_$$ 2>&1"); 
    }
    system("rm -f $request_root/lapsplot/lapsplot.in; ln -s $web_root/$ScratchDir/lapsplot.in_$$ $request_root/lapsplot/lapsplot.in; rm -f $request_root/lapsplot/lapsplot.out; ln -s $web_root/$ScratchDir/lapsplot.out_$$ $request_root/lapsplot/lapsplot.out; rm -f $request_root/lapsplot/lapsplot.err; ln -s $web_root/$ScratchDir/lapsplot.err_$$ $request_root/lapsplot/lapsplot.err; rm -f $request_root/lapsplot/loop; ln -s $web_root/$ScratchDir/$$ $request_root/lapsplot/loop");
    print<<"EOI";
    <A HREF=\"/$ScratchDir/gmeta_$$.gm\">gmeta file</A>
    |
    <A HREF=\"/$ScratchDir/selected.in_$$\">parms file</A>
    <p>
    <center>
    <img src=\"/$ScratchDir/gmeta_$$.$image_type\">

    </body></html>

EOI
  }else{
    print<<"EOI";
    <p>
    <center>
    <IMG SRC="colorbar.gif">
    </body></html>

EOI
  }

# print " test output: write selected.in file \n"; 
# print "forecast_time = $forecast_time ";
# print "hhmm = $hhmm ";


#print "<br>writing frames_orig to selected.in = $frames_orig";

# Write a selected.in file
  $logFile = "$web_root/$ScratchDir/selected.in_$$";
  open(SELECTED,">$logFile") ||
    die "Content-type: text/html\n\nCan't open $logFile: $!\n";
# printf SELECTED "$domain_first\n";
  printf SELECTED "@domains\n";
  printf SELECTED "@sources\n";
  printf SELECTED "@fields\n";
  printf SELECTED "@pressure_levels\n";
  printf SELECTED "$a9time\n";
  printf SELECTED "$forecast_time\n";
  printf SELECTED "$zoom_safe\n";
  printf SELECTED "$xcen_safe\n";
  printf SELECTED "$ycen_safe\n";
  printf SELECTED "$density_safe\n";
  printf SELECTED "$thickness_safe\n";
# printf SELECTED "$size_safe\n";
  printf SELECTED "$npix_safe\n";
  printf SELECTED "$frames_orig\n";
  printf SELECTED "$delay_safe\n";
  close SELECTED;

  system("rm -f $request_root/lapsplot/selected.in; ln -s $web_root/$ScratchDir/selected.in_$$ $request_root/lapsplot/selected.in");

# get best return address for log
  $returnAddress = ($ENV{'REMOTE_HOST'} || $ENV{REMOTE_ADDR} ||
                  "(Unknown requestor)");

  $logFile = "$thisDir/laps_request.log";
  open(LOG,">>$logFile") ||
        die "Content-type: text/html\n\nCan't open $logFile: $!\n";
# get time for log file
  $time = time();
  ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = gmtime($time);
  $thisMonth=$month[$mon];
  $nHours=($stopSecs+1-$startSecs)/3600;
  printf LOG "%02d-$thisMonth-$year-%02d%02dZ $returnAddress " .
             "%3.1f (%4.1f,%4.1f) ".
             " $out_levels %s\n"
             ,$mday,$hour,$min,$density,$thickness,$a9time,$CenterLon,
             $ENV{'REMOTE_USER'};
  close LOG;

  $logFile = "$web_root/cgi/laps_anal_products.cgi.log";
  open(LOG,">>$logFile") ||
        die "Content-type: text/html\n\nCan't open $logFile: $!\n";
# get time for log file
  $time = time();
  ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = gmtime($time);
  $thisMonth=$month[$mon];
  $nHours=($stopSecs+1-$startSecs)/3600;
  $year=$year+1900;
  printf LOG "....$thisMonth $mday %02d\:%02d\:%02d UTC $year  $returnAddress " .
             " $domain_first $out_sources %s $out_fields %s $out_levels %s $$\n"
             ,$hour,$min,$sec,
             $ENV{'REMOTE_USER'};
  close LOG;

  $LOG_USER = $ENV{'REMOTE_USER'};

}else{ # $err

# Specify default values
  $zoom_safe = 1.0;
  $xcen_safe = 0.5;
  $ycen_safe = 0.5;
  $density_safe = 1.0;
  $thickness_safe = 1;
  $frames_safe = 1;
  $delay_safe = 75;
# $size_safe = 1;
  $npix_safe = 885;
  @domains = $default_domain;

# Write a selected.in file to update the domain values
  $logFile = "$web_root/$ScratchDir/selected.in_$$";
  open(SELECTED,">$logFile") ||
        die "Content-type: text/html\n\nCan't open $logFile: $!\n";
  printf SELECTED "@domains\n";
  printf SELECTED "@sources\n";
  printf SELECTED "@fields\n";
  printf SELECTED "@pressure_levels\n";
  printf SELECTED "$a9time\n";
  printf SELECTED "$hhmm\n";
  printf SELECTED "$zoom_safe\n";
  printf SELECTED "$xcen_safe\n";
  printf SELECTED "$ycen_safe\n";
  printf SELECTED "$density_safe\n";
  printf SELECTED "$thickness_safe\n";
# printf SELECTED "$size_safe\n";
  printf SELECTED "$npix_safe\n";
  printf SELECTED "$frames_safe\n";
  printf SELECTED "$delay_safe\n";
  close SELECTED;

  system("rm -f $request_root/lapsplot/selected.in; ln -s $web_root/$ScratchDir/selected.in_$$ $request_root/lapsplot/selected.in");

} # $err

#print " test output: End of nph-laps.cgi - calling laps.cgi \n"; 

system("$web_root/request/laps.cgi");

#system("$web_root/cgi/log-access.s $logFile $LOG_USER request_$domain_first");
#           "%3.1f".

alarm 0;

} #eval 
